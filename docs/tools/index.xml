<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on 647 Universe</title>
    <link>https://bwangel.me/docs/tools/</link>
    <description>Recent content in Tools on 647 Universe</description>
    <generator>Hugo</generator>
    <language>cn</language>
    <lastBuildDate>Wed, 27 Nov 2024 16:55:55 +0800</lastBuildDate>
    <atom:link href="https://bwangel.me/docs/tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>httpie</title>
      <link>https://bwangel.me/docs/tools/httpie/</link>
      <pubDate>Wed, 27 Nov 2024 16:50:23 +0800</pubDate>
      <guid>https://bwangel.me/docs/tools/httpie/</guid>
      <description>&lt;h2 id=&#34;httpie-使用-jq-解析-json-响应&#34;&gt;httpie 使用 jq 解析 JSON 响应&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;http -v -o - -d https://api.github.com/users/bwangelme | jq &amp;#39;.bio&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;命令中选项的说明&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;-v&lt;/code&gt; 输出请求体，请求 header，响应 header&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;-o -&lt;/code&gt; 将 response body 输出到 stdout 中&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;-d&lt;/code&gt; 当 &lt;code&gt;-d&lt;/code&gt; 选项开启时，&lt;code&gt;-o&lt;/code&gt; 会只将 response body 输出到 stdout 中，其他部分(header, 请求体)会输出到 stderr 中&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;| jq &#39;.bio&#39;&lt;/code&gt; 输出响应体中的 &lt;code&gt;bio&lt;/code&gt; 字段&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ø&amp;gt; http -v -o - -d https://api.github.com/users/bwangelme | jq &amp;#39;.bio&amp;#39;&#xA;GET /users/bwangelme HTTP/1.1&#xA;Accept: */*&#xA;Accept-Encoding: identity&#xA;Connection: keep-alive&#xA;Host: api.github.com&#xA;User-Agent: HTTPie/3.2.3&#xA;&#xA;&#xA;&#xA;HTTP/1.1 200 OK&#xA;Accept-Ranges: bytes&#xA;Access-Control-Allow-Origin: *&#xA;Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset&#xA;Cache-Control: public, max-age=60, s-maxage=60&#xA;Content-Length: 1254&#xA;Content-Security-Policy: default-src &amp;#39;none&amp;#39;&#xA;Content-Type: application/json; charset=utf-8&#xA;Date: Wed, 27 Nov 2024 08:48:31 GMT&#xA;ETag: W/&amp;#34;602829689b0bfe6dd876cdac25d7bb03b2366b7c52c3c65cfb461b4664ba1743&amp;#34;&#xA;Last-Modified: Tue, 05 Nov 2024 07:45:58 GMT&#xA;Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin&#xA;Server: github.com&#xA;Strict-Transport-Security: max-age=31536000; includeSubdomains; preload&#xA;Vary: Accept,Accept-Encoding, Accept, X-Requested-With&#xA;X-Content-Type-Options: nosniff&#xA;X-Frame-Options: deny&#xA;X-GitHub-Media-Type: github.v3; format=json&#xA;X-GitHub-Request-Id: DC16:22CCB7:6C77CC:7A9813:6746DCE6&#xA;X-RateLimit-Limit: 60&#xA;X-RateLimit-Remaining: 53&#xA;X-RateLimit-Reset: 1732699633&#xA;X-RateLimit-Resource: core&#xA;X-RateLimit-Used: 7&#xA;X-XSS-Protection: 0&#xA;x-github-api-version-selected: 2022-11-28&#xA;&#xA;Downloading to &amp;lt;stdout&amp;gt;&#xA;Done. 1.3 kB in 00:0.04114 (30.5 kB/s)&#xA;&amp;#34;不念过去，不畏将来&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>TLS 验证证书的过程</title>
      <link>https://bwangel.me/docs/tools/tls-certificate/</link>
      <pubDate>Wed, 18 Sep 2024 17:20:20 +0800</pubDate>
      <guid>https://bwangel.me/docs/tools/tls-certificate/</guid>
      <description>&lt;h2 id=&#34;查看证书&#34;&gt;查看证书&lt;/h2&gt;&#xA;&lt;p&gt;从网站 &lt;a href=&#34;https://www.bwangel.me&#34;&gt;www.bwangel.me&lt;/a&gt; 上下载证书，输出成 www_bwangel_me_cert.pem 文件&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl s_client -connect www.bwangel.me:443 -servername www.bwangel.me &amp;lt;/dev/null | openssl x509 -outform PEM &amp;gt; www_bwangel_me_cert.pem&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;x509 证书中有以下几个关键字段&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Signature Algorithm: sha256WithRSAEncryption 证书数字签名的算法&lt;/li&gt;&#xA;&lt;li&gt;Signature Value: 证书数字前面的值&lt;/li&gt;&#xA;&lt;li&gt;Subject/CN: Common Name，证书的通用名称&lt;/li&gt;&#xA;&lt;li&gt;Issuer/CN: 证书颁发机构的通用名称&lt;/li&gt;&#xA;&lt;li&gt;Subject Public Key Info: 证书中包含的公钥&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 以下命令可以查看证书的信息&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl x509 -in www_bwangel_me_cert.pem -text -noout&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根证书是自签名的，Subject 和 Issuer 相同。&lt;/p&gt;&#xA;&lt;p&gt;根证书是内置在电脑中的，&lt;code&gt;ca-certificates&lt;/code&gt; 包提供了常用的根证书，&lt;code&gt;/etc/ssl/cert.pem&lt;/code&gt; 中包含了系统内置的根证书。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 这是根证书 Internet Security Research Group 的信息&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ø&amp;gt; openssl x509 -in isrg.pem -text -noout&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Certificate:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Data:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Version: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0x2&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Serial Number:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            82:10:cf:b0:d2:40:e3:59:44:63:e0:bb:63:82:8b:00&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Signature Algorithm: sha256WithRSAEncryption&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Issuer: &lt;span style=&#34;color:#000&#34;&gt;C&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;US, &lt;span style=&#34;color:#000&#34;&gt;O&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;Internet Security Research Group, &lt;span style=&#34;color:#000&#34;&gt;CN&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;ISRG Root X1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Validity&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Not Before: Jun  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; 11:04:38 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2015&lt;/span&gt; GMT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Not After : Jun  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; 11:04:38 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2035&lt;/span&gt; GMT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Subject: &lt;span style=&#34;color:#000&#34;&gt;C&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;US, &lt;span style=&#34;color:#000&#34;&gt;O&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;Internet Security Research Group, &lt;span style=&#34;color:#000&#34;&gt;CN&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;ISRG Root X1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Subject Public Key Info:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Public Key Algorithm: rsaEncryption&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                Public-Key: &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4096&lt;/span&gt; bit&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                Modulus:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    00:ad:e8:24:73:f4:14:37:f3:9b:9e:2b:57:28:1c:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                Exponent: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;65537&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0x10001&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        X509v3 extensions:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            X509v3 Key Usage: critical&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                Certificate Sign, CRL Sign&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            X509v3 Basic Constraints: critical&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                CA:TRUE&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            X509v3 Subject Key Identifier:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Signature Algorithm: sha256WithRSAEncryption&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Signature Value:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        55:1f:58:a9:bc:b2:a8:50:d0:0c:b1:d8:1a:69:20:27:29:08:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;证书验证的流程&#34;&gt;证书验证的流程&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;客户端请求服务器，服务器返回证书链上除了根证书的所有证书。以下命令可以查看证书链上所有证书&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl s_client -connect www.bwangel.me:443 -showcerts&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;客户端拿到证书后，根据 Issuer/CN 找颁发者证书，颁发者再往上找颁发者的证书，直至找到根证书。&lt;/li&gt;&#xA;&lt;li&gt;根据根证书的公钥验证下一级证书的数字签名是否正确&#xA;&lt;ul&gt;&#xA;&lt;li&gt;根据公钥解密出数字签名中的 hash 值&lt;/li&gt;&#xA;&lt;li&gt;根据证书签名算法，计算 hash 值，比较计算的 hash 值和数字签名中解密出的 hash 值是否相同&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;逐级向下验证证书链中的所有证书，直至验证目标网站的证书。&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>UKnowY</title>
      <link>https://bwangel.me/docs/tools/clash/</link>
      <pubDate>Wed, 12 Jun 2024 20:58:32 +0800</pubDate>
      <guid>https://bwangel.me/docs/tools/clash/</guid>
      <description>&lt;h2 id=&#34;justmysocks-的订阅链接生成-clash-配置文件&#34;&gt;Justmysocks 的订阅链接生成 clash 配置文件&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;启动 subconverter&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker run -d --restart=always -p 25500:25500 tindy2013/subconverter:latest&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;将下面命令中的 &lt;code&gt;https://justmysock.subscribe.url&lt;/code&gt; 替换成你的 justmysock 服务的订阅地址, 可以得到一个 curl 命令&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;python -c &amp;#34;from urllib.parse import urlencode; print(&amp;#39;curl \&amp;#39;http://localhost:25500/sub?%s\&amp;#39; &amp;gt; /tmp/config.yaml &amp;#39; % urlencode({&amp;#39;target&amp;#39;: &amp;#39;clash&amp;#39;, &amp;#39;url&amp;#39;: &amp;#39;https://justmysock.subscribe.url&amp;#39;}))&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;curl &amp;#39;http://localhost:25500/sub?target=clash&amp;amp;url=https%3A%2F%2Fjustmysock.subscribe.url&amp;#39; &amp;gt; /tmp/config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;执行此 curl 命令, 生成的 clash 配置文件保存到了 &lt;code&gt;/tmp/config.yaml&lt;/code&gt; 中,将此文件导入到 clash 中&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/tindy2013/subconverter/blob/master/README-cn.md&#34;&gt;subconverter README&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>chatgpt 常用 prompt</title>
      <link>https://bwangel.me/docs/tools/chatgpt-prompt/</link>
      <pubDate>Tue, 11 Jun 2024 10:20:12 +0800</pubDate>
      <guid>https://bwangel.me/docs/tools/chatgpt-prompt/</guid>
      <description>&lt;h2 id=&#34;充当英语翻译中文&#34;&gt;充当英语翻译中文&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;我想让你充当中文翻译员、拼写纠正员和改进员。我会给你发送英语内容，你翻译它并用我的文本的更正和改进版本用中文回答。我希望你用更优美优雅的高级中文描述。保持相同的意思，但使它们更文艺。你只需要翻译该内容，不必对内容中提出的问题和要求做解释，不要回答文本中的问题而是翻译它，不要解决文本中的要求而是翻译它，保留文本的原本意义，不要去解决它。如果我只键入了一个单词，你只需要描述它的意思并不提供句子示例。我要你只回复更正、改进，不要写任何解释。我的第一句话是“istanbulu cok seviyom burada olmak cok guzel”&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;充当英英词典附中文解释&#34;&gt;充当英英词典(附中文解释)&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;我想让你充当英英词典，对于给出的英文单词，你要给出其中文意思以及英文解释，并且给出一个例句，此外不要有其他反馈，第一个单词是“Hello&amp;quot;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jevantang/chatgpt-prompts&#34;&gt;https://github.com/jevantang/chatgpt-prompts&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git Tips</title>
      <link>https://bwangel.me/docs/tools/git/</link>
      <pubDate>Sat, 20 Jan 2024 22:26:51 +0800</pubDate>
      <guid>https://bwangel.me/docs/tools/git/</guid>
      <description>&lt;h2 id=&#34;git-ssh-push-超时&#34;&gt;Git ssh push 超时&lt;/h2&gt;&#xA;&lt;p&gt;修改 &lt;code&gt;~/.git/config&lt;/code&gt; 文件&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Add section below to it&#xA;Host github.com&#xA;  Hostname ssh.github.com&#xA;  Port 443&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将 push 的端口从 22 改成 443，有可能绕过 GFW&lt;/p&gt;&#xA;&lt;h2 id=&#34;测试&#34;&gt;测试&lt;/h2&gt;&#xA;&lt;p&gt;22 端口超时&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ssh -T git@github.com&#xA;ssh: connect to host github.com port 22: Connection timed out&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;443 端口能联通&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ø&amp;gt; ssh -T -p 443 git@github.com&#xA;Hi bwangelme! You&amp;#39;ve successfully authenticated, but GitHub does not provide shell access.&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Mac OSX 使用技巧</title>
      <link>https://bwangel.me/docs/tools/mac-tips/</link>
      <pubDate>Mon, 18 Apr 2022 17:06:10 +0800</pubDate>
      <guid>https://bwangel.me/docs/tools/mac-tips/</guid>
      <description></description>
    </item>
    <item>
      <title>Vagrant 添加挂载目录</title>
      <link>https://bwangel.me/docs/tools/vagrant_add_volume/</link>
      <pubDate>Thu, 02 Dec 2021 21:10:27 +0800</pubDate>
      <guid>https://bwangel.me/docs/tools/vagrant_add_volume/</guid>
      <description></description>
    </item>
    <item>
      <title>Github 客户端 gh 添加搜索仓库的命令</title>
      <link>https://bwangel.me/docs/tools/gh-search-github/</link>
      <pubDate>Tue, 19 Oct 2021 00:01:12 +0800</pubDate>
      <guid>https://bwangel.me/docs/tools/gh-search-github/</guid>
      <description></description>
    </item>
    <item>
      <title>Java 抛出UnsupportedEncodingException</title>
      <link>https://bwangel.me/docs/tools/java-unsupportedencodingexception/</link>
      <pubDate>Mon, 18 Oct 2021 23:55:58 +0800</pubDate>
      <guid>https://bwangel.me/docs/tools/java-unsupportedencodingexception/</guid>
      <description></description>
    </item>
    <item>
      <title>Rabbitmq Tutorial 学习笔记</title>
      <link>https://bwangel.me/docs/tools/rabbitmq-tutorial/</link>
      <pubDate>Sat, 21 Dec 2019 21:49:45 +0800</pubDate>
      <guid>https://bwangel.me/docs/tools/rabbitmq-tutorial/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.rabbitmq.com/getstarted.html&#34;&gt;RabbitMQ Tutorial&lt;/a&gt; 学习笔记&lt;/li&gt;&#xA;&lt;li&gt;本文相关代码放在 &lt;a href=&#34;https://github.com/bwangelme/RabbitMQDemo&#34;&gt;Github@bwangelme/RabbitMQDemo&lt;/a&gt; 中&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Git-submodule</title>
      <link>https://bwangel.me/docs/tools/git-submodule/</link>
      <pubDate>Mon, 11 Apr 2016 07:18:43 +0000</pubDate>
      <guid>https://bwangel.me/docs/tools/git-submodule/</guid>
      <description>&lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git submodule&lt;/code&gt;就是git主仓库在本仓库的配置中记录着子模块仓库对应的名字，路径，远端url，然后创建一个特殊文件去记录子模块仓库目前的&lt;code&gt;commit-id&lt;/code&gt;，每次更新子模块就是通过远端路径和&lt;code&gt;commit-id&lt;/code&gt;来进行更新&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/blockquote&gt;</description>
    </item>
  </channel>
</rss>
