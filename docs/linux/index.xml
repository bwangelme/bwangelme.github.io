<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>647 Universe – Linux</title>
    <link>https://bwangel.me/docs/linux/</link>
    <description>Recent content in Linux on 647 Universe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    
	  <atom:link href="https://bwangel.me/docs/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: curl</title>
      <link>https://bwangel.me/docs/linux/curl/</link>
      <pubDate>Tue, 01 Aug 2023 11:50:58 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/curl/</guid>
      <description>
        
        
        &lt;h2 id=&#34;curl-post-json-数据&#34;&gt;curl POST JSON 数据&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -X PUT -H &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;@/tmp/demo.json&amp;#39;&lt;/span&gt; :9200/demo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ø&amp;gt; cat /tmp/demo.json
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;settings&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;number_of_shards&amp;#34;&lt;/span&gt;: 1,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;number_of_replicas&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;使用---resolve-选项替换域名&#34;&gt;使用 &lt;code&gt;--resolve&lt;/code&gt; 选项替换域名&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;将 &lt;a href=&#34;https://www.google.com&#34;&gt;www.google.com&lt;/a&gt; 替换成 127.0.0.1，并访问 8000 端口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;curl -v --resolve www.google.com:8000:127.0.0.1 http://www.google.com:8000/ping&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 &lt;a href=&#34;https://www.google.com&#34;&gt;https://www.google.com&lt;/a&gt; 替换成 127.0.0.1，此时 curl 会忽略证书和域名不匹配的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;curl -v --resolve www.google.com:443:127.0.0.1 https://www.google.com/ping&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 &lt;a href=&#34;http://www.google.com&#34;&gt;http://www.google.com&lt;/a&gt; 替换成 127.0.0.1，http 默认访问 80 端口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;curl -v --resolve www.google.com:80:127.0.0.1 http://www.google.com/ping&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;--fail-和---fail-with-body&#34;&gt;&lt;code&gt;--fail&lt;/code&gt; 和 &lt;code&gt;--fail-with-body&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;这两个选项都可以让 curl 在接收到 400 及以上的 HTTP 响应码的时候，将退出码设置为 22&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--fail-with-body&lt;/code&gt; 会输出服务端返回的内容到 stdout 或文件中&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--fail&lt;/code&gt; 不会有任何输出，当服务端返回的是认证相关的状态码时(401/407), 可能会让使用者误以为出错了&lt;/p&gt;
&lt;h3 id=&#34;使用场景&#34;&gt;使用场景&lt;/h3&gt;
&lt;p&gt;在一个 dockerfile 中，我期望下载项目的 &lt;code&gt;go.mod&lt;/code&gt; 和 &lt;code&gt;go.sum&lt;/code&gt; 文件，然后再执行 &lt;code&gt;go mod download&lt;/code&gt;。
这样可以在 clone 代码之前，先下载 go module 文件。&lt;/p&gt;
&lt;p&gt;如果项目的代码变了，但是依赖并没有变，因为 docker build 的缓存原理，可以省去下载 go module 的步骤。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;...
ARG app_repo
ARG app_commit

RUN [[ ! -d /tmp/app ]] &amp;amp;&amp;amp; mkdir /tmp/app &amp;amp;&amp;amp; \
    curl -s https://raw.githubusercontent.com/${app_repo}/${app_commit}/go.mod -o /tmp/app/go.mod &amp;amp;&amp;amp; \
    curl -s https://raw.githubusercontent.com/${app_repo}/${app_commit}/go.sum -o /tmp/app/go.sum

RUN cd /tmp/app &amp;amp;&amp;amp; go mod download
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当 app_repo 和 app_commit 参数错误，导致对应的 go.mod 文件不存在，curl 会得到 404 的 HTTP 响应码，此时我期望 docker build 出错。&lt;/p&gt;
&lt;p&gt;但实际上并不会出错，docker build 会继续执行，直到 go mod download 文件无法识别 go.mod 文件，docker build 才会异常退出。&lt;/p&gt;
&lt;p&gt;显示的错误内容如下:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;0.467 go: errors parsing go.mod:
0.467 /tmp/app/go.mod:1: unknown directive: 404:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当我给 &lt;code&gt;curl&lt;/code&gt; 加上了 &lt;code&gt;--fail&lt;/code&gt; 选项之后，程序就会在下载 go.mod 出错时直接退出。显示的错误如下:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ERROR: failed to solve: 
	process &amp;#34;
		/bin/bash -c [[ ! -d /tmp/app ]] &amp;amp;&amp;amp; mkdir /tmp/app &amp;amp;&amp;amp;
		curl --fail -s https://raw.githubusercontent.com/${app_repo}/${app_commit}/go.mod -o /tmp/app/go.mod &amp;amp;&amp;amp;
		curl -s https://raw.githubusercontent.com/${app_repo}/${app_commit}/go.sum -o /tmp/app/go.sum
	&amp;#34; did not complete successfully: exit code: 22
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最终的 dockerfile 代码及复现命令&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;FROM golang:1.19
SHELL [&amp;#34;/bin/bash&amp;#34;, &amp;#34;-c&amp;#34;]

ARG app_repo
ARG app_commit

RUN go env -w GOPROXY=https://goproxy.cn,direct

RUN [[ ! -d /tmp/app ]] &amp;amp;&amp;amp; mkdir /tmp/app &amp;amp;&amp;amp; \
    curl --fail -s https://raw.githubusercontent.com/${app_repo}/${app_commit}/go.mod -o /tmp/app/go.mod &amp;amp;&amp;amp; \
    curl -s https://raw.githubusercontent.com/${app_repo}/${app_commit}/go.sum -o /tmp/app/go.sum

RUN cd /tmp/app &amp;amp;&amp;amp; go mod download
RUN HTTP_PROXY=&amp;#39;http://改成你自己的代理&amp;#39; HTTPS_PROXY=&amp;#39;http://改成你自己的代理&amp;#39; git clone https://github.com/${app_repo}.git ~/app
RUN cd ~/app &amp;amp;&amp;amp; git reset --hard ${app_commit} &amp;amp;&amp;amp; go build .
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;复现命令&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 注意这个 app_commit 是一个不存在的 commit
docker build -t curl_test --build-arg app_repo=bwangelme/rdcdemo --build-arg app_commit=2f24a0658d7feb0205e7d75b7ae218ff6495e8f3 .
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Makefile</title>
      <link>https://bwangel.me/docs/linux/makefile/</link>
      <pubDate>Tue, 19 Dec 2023 17:13:40 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/makefile/</guid>
      <description>
        
        
        &lt;ul&gt;
&lt;li&gt;&lt;code&gt;?=&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;?=&lt;/code&gt; 指示仅在未设置或没有值时设置 KDIR 变量。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# make test 将会输出 foo
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;KDIR&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;?=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;KDIR&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;?=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;bar&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;$(&lt;/span&gt;KDIR&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 利用 Python 处理字符串</title>
      <link>https://bwangel.me/docs/linux/python-shell/</link>
      <pubDate>Thu, 14 Dec 2023 12:06:58 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/python-shell/</guid>
      <description>
        
        
        &lt;p&gt;/tmp/abc.md 中的内容如下&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;subject/music
antispam/karazhan
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我想输出成&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Repo(dir=&amp;#39;music&amp;#39;, name=&amp;#39;subject/music&amp;#39;),
Repo(dir=&amp;#39;karazhan&amp;#39;, name=&amp;#39;antispam/karazhan&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以利用 Python 来做解析重组字符串的工作, &lt;code&gt;sys.argv[1]&lt;/code&gt; 就是每行想要解析的字符串&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;parse.py&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;sys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;dir_&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sys&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;argv&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sys&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;argv&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Repo(dir=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;, name=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;),&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dir_&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果 xargs 不加 -I 那就是将多行内容聚合到一行解析。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cat /tmp/abc.md | rg -v &amp;#39;^#&amp;#39; | xargs -I{} python3 /tmp/parse.py {}
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: DNS</title>
      <link>https://bwangel.me/docs/linux/dns/</link>
      <pubDate>Sat, 09 Sep 2023 13:41:16 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/dns/</guid>
      <description>
        
        
        &lt;h2 id=&#34;a-记录&#34;&gt;A 记录&lt;/h2&gt;
&lt;p&gt;Address Mapping records, 指示了对应名称的IPv4地址, A记录用来将域名转换为ip地址.&lt;/p&gt;
&lt;h2 id=&#34;aaaa-记录&#34;&gt;AAAA 记录&lt;/h2&gt;
&lt;p&gt;类似于A记录, 只不过指示的是IPv6的地址。&lt;/p&gt;
&lt;p&gt;因为 IPv6 地址长度是 IPv4 的四倍，所以用 AAAA 表示 IPv6 记录&lt;/p&gt;
&lt;h2 id=&#34;ns-记录&#34;&gt;NS 记录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Name Server records, 用来指定对应名称的可信名称服务器 (authoritative name server)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如这段 dig 日志是 &lt;code&gt;j.gtld-servers.net&lt;/code&gt; 告诉我们，它不知道 &lt;code&gt;www.baidu.com&lt;/code&gt; 的 IP, 但是它告诉我们要查询 &lt;code&gt;baidu.com.&lt;/code&gt; 域的地址，可以去 ns[12345].baidu.com 这5个地址中查。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;baidu.com.              172800  IN      NS      ns2.baidu.com.
baidu.com.              172800  IN      NS      ns3.baidu.com.
baidu.com.              172800  IN      NS      ns4.baidu.com.
baidu.com.              172800  IN      NS      ns1.baidu.com.
baidu.com.              172800  IN      NS      ns7.baidu.com.
;; Received 849 bytes from 192.48.79.30#53(j.gtld-servers.net) in 316 ms
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;ptr-记录&#34;&gt;PTR 记录&lt;/h2&gt;
&lt;p&gt;Pointer records, 通过 IP 反查域名，大部分域名服务器都不支持，目前只找到了 &lt;code&gt;dns.google.&lt;/code&gt; 支持 PTR 查询&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ø&amp;gt; dig -x 8.8.4.4

;; QUESTION SECTION:
;4.4.8.8.in-addr.arpa.          IN      PTR

;; ANSWER SECTION:
4.4.8.8.in-addr.arpa.   1       IN      PTR     dns.google.
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;cname-记录&#34;&gt;CNAME 记录&lt;/h2&gt;
&lt;p&gt;又称 alias 别名，是 A 记录的别名&lt;/p&gt;
&lt;p&gt;例如以下的查询说明&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;www.baidu.com.&lt;/code&gt; 是 &lt;code&gt;www.a.shifen.com.&lt;/code&gt; 的别名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www.a.shifen.com.&lt;/code&gt; 指向了 &lt;code&gt;220.181.38.150&lt;/code&gt; 和 &lt;code&gt;220.181.38.149&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ø&amp;gt; dig -4 www.baidu.com

;; QUESTION SECTION:
;www.baidu.com.                 IN      A

;; ANSWER SECTION:
www.baidu.com.          70      IN      CNAME   www.a.shifen.com.
www.a.shifen.com.       53      IN      A       220.181.38.150
www.a.shifen.com.       53      IN      A       220.181.38.149
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;查询方式&#34;&gt;查询方式&lt;/h2&gt;
&lt;h3 id=&#34;递归查询&#34;&gt;递归查询&lt;/h3&gt;
&lt;p&gt;client 发送请求给局域网 DNS, 局域网 DNS 再去上游 DNS 服务器执行进一步查询。一级一级向上递归并回到局域网 DNS , 局域网 DNS 将查询的地址返回给客户端&lt;/p&gt;
&lt;p&gt;dig 命令默认执行的就是递归查询&lt;/p&gt;
&lt;h3 id=&#34;集中查询&#34;&gt;集中查询&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;client 发送请求给局域网 DNS 获得 DNS 根服务器的地址&lt;/li&gt;
&lt;li&gt;client 请求根服务器获得下一级 DNS 服务器地址&lt;/li&gt;
&lt;li&gt;以此往复，一级一级直到查到目标域名的 IP 地址&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以下用集中查询的方式查询 &lt;a href=&#34;https://www.baidu.com&#34;&gt;www.baidu.com&lt;/a&gt; IP 地址的过程&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ø&amp;gt; dig -4 +trace www.baidu.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 获取根服务器的名字列表&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.18.12-0ubuntu0.22.04.2-Ubuntu &amp;lt;&amp;lt;&amp;gt;&amp;gt; -4 +trace www.baidu.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;;&lt;/span&gt; global options: +cmd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      k.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      b.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      h.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      i.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      l.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      c.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      a.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      d.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      e.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      m.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      f.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      g.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.                       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2229&lt;/span&gt;    IN      NS      j.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;;&lt;/span&gt; Received &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;239&lt;/span&gt; bytes from 10.8.0.1#53&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;10.8.0.1&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; in &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; ms
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 根服务器返回通用定义域名的名字列表&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      a.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      b.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      c.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      d.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      e.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      f.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      g.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      h.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      i.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      j.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      k.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      l.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      m.gtld-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt;   IN      DS      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;30909&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; E2D3C916F6DEEAC73294E8268FB5885044A833FC5459588F4A9184CF C41A5766
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;com.                    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt;   IN      RRSIG   DS &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20230921210000&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20230908200000&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11019&lt;/span&gt; . M02FKEukwDc7T/KjNtpdCfwvkzHx1STqPt3AO/eXQxqBU7jN9vrHbJMJ PNXpBlO5p+HgnZ9w0c7sR8qnDXFl1OziNAo0el1fRq0YFwBae9BgoLCg IeZVoZmqerXpVXCrpKX1Fb+ILjuIX1bL5li2xQ/gpq4u91EijGvZg6sQ UmBiQW0JlXKR927uOm+aJHN6Ujnzd7sZrOWpSXQAOVPf4dHjvCJNohfs V9cJkjBRI+QuOpArJ+gCGKoiMidjYZBuYXIsYV7PYLQbVfVZg2E3JFXX h5BkqZUlCZbabAcVCzQ6BGZMpxcs1A/J8g/7+eguU6bJFpbiBXeHEZhx &lt;span style=&#34;color:#000&#34;&gt;TS1zoQ&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;;&lt;/span&gt; Received &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1173&lt;/span&gt; bytes from 192.58.128.30#53&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;j.root-servers.net&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; in &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; ms
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 通用顶级域名返回 baidu.com. 域的 DNS 服务器名字列表&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;baidu.com.              &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      ns2.baidu.com.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;baidu.com.              &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      ns3.baidu.com.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;baidu.com.              &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      ns4.baidu.com.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;baidu.com.              &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      ns1.baidu.com.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;baidu.com.              &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;172800&lt;/span&gt;  IN      NS      ns7.baidu.com.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CK0POJMG874LJREF7EFN8430QVIT8BSM.com. &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt; IN NSEC3 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; - CK0Q2D6NI4I7EQH8NA30NS61O48UL8G5 NS SOA RRSIG DNSKEY NSEC3PARAM
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CK0POJMG874LJREF7EFN8430QVIT8BSM.com. &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt; IN RRSIG NSEC3 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20230915042421&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20230908031421&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4459&lt;/span&gt; com. ACWanRvoDIwYH40J5TjA8G6UXUldpz8+aNZdFlLO1eY9GRalvfLnpa6H RqiP03pvORSpHJEv2+HuQ1HtWTCj/nlJOeiRKG0Bk/HjcjkH9yv1b6pF ASeyvdJYN2wYPp4e1KPVe3GuoxBETq6kPKfUhR289IzQFy5vLgIfeVWK &lt;span style=&#34;color:#000&#34;&gt;pR6z0kgCFKTKaO21nj2LxxWsxmfuIpe8ztJuPTF7lVhXhw&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HPVV0C47Q7CQMTAJM90K1FBFJBRP4B4D.com. &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt; IN NSEC3 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; - HPVVAN8CFKHHHMEIDVJHFNQEOI5G6C89 NS DS RRSIG
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HPVV0C47Q7CQMTAJM90K1FBFJBRP4B4D.com. &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt; IN RRSIG NSEC3 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86400&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20230914060727&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20230907045727&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4459&lt;/span&gt; com. oUS/iAWQKq/0KHQdg18vwuUvT1Ftl8tnpHZVCwdQPEaIq3gceZnmpE2Z u8pj+JPFOUqp/DWRNlWZYMmTuhSjJil7cCpahWk3+RJbeJQIWPtNvBkl BBmM1M3he1ELoS37YqcflA8U/q4CaNdEpIS7OiNy6f4efrkZMvqRZZ9U hRgI2CugaGb6C9mDeAfThooAqsc5xFCX9KjWGsNLr0pE+Q&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;;&lt;/span&gt; Received &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;849&lt;/span&gt; bytes from 192.48.79.30#53&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;j.gtld-servers.net&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; in &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;316&lt;/span&gt; ms
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# ns3.baidu.com 返回 www.baidu.com 的解析结果&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;www.baidu.com.          &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1200&lt;/span&gt;    IN      CNAME   www.a.shifen.com.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;;&lt;/span&gt; Received &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt; bytes from 153.3.238.93#53&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;ns3.baidu.com&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; in &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24&lt;/span&gt; ms
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这是集中查询的抓包过程(建议在新 tab 中打开图片对比说明查看)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://passage-1253400711.cos.ap-beijing.myqcloud.com/2023-09-09-143516.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;包序号&lt;/th&gt;
&lt;th&gt;包功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1, 2&lt;/td&gt;
&lt;td&gt;从 10.8.0.1 DNS 服务器获得根服务器的地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25, 26&lt;/td&gt;
&lt;td&gt;向 192.168.1.1 和 10.8.0.1 查询根服务器的地址 (两个网卡都发送了查询请求)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31&lt;/td&gt;
&lt;td&gt;10.8.0.1 和 192.168.1.1 返回 DNS 根服务器地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;向根服务器 &lt;code&gt;g.root-servers.net.&lt;/code&gt; 查询 &lt;code&gt;www.baidu.com.&lt;/code&gt; 的地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;根服务器 &lt;code&gt;g.root-servers.net.&lt;/code&gt; 返回通用顶级域名列表及其地址 &lt;code&gt;[a-j].gtld-servers.net&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45&lt;/td&gt;
&lt;td&gt;向 10.8.0.1 查询通用顶级域名的 IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59&lt;/td&gt;
&lt;td&gt;10.8.0.1 返回通用顶级域名的 IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;46&lt;/td&gt;
&lt;td&gt;向通用顶级域名 DNS server &lt;code&gt;i.gtld-servers.net&lt;/code&gt; 查询 &lt;a href=&#34;https://www.baidu.com&#34;&gt;www.baidu.com&lt;/a&gt; 的 IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;&lt;code&gt;i.gtld-servers.net&lt;/code&gt; DNS返回 &lt;code&gt;baidu.com.&lt;/code&gt; 域的 DNS 服务器 &lt;code&gt;ns[12347].baidu.com&lt;/code&gt; 的名字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;61, 62, 63, 64, 65, 69&lt;/td&gt;
&lt;td&gt;向 192.168.1.1 和 10.8.0.1 查询 &lt;code&gt;ns[12347].baidu.com&lt;/code&gt; 的 IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;66,67,68,71,72,73&lt;/td&gt;
&lt;td&gt;192.168.1.1 和 10.8.0.1 返回 &lt;code&gt;ns[12347].baidu.com&lt;/code&gt; 的 IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;70&lt;/td&gt;
&lt;td&gt;向 &lt;code&gt;ns2.baidu.com&lt;/code&gt; 查询 &lt;code&gt;www.baidu.com&lt;/code&gt; 的地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;74&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ns2.baidu.com&lt;/code&gt; 返回 &lt;code&gt;www.baidu.com&lt;/code&gt; 的地址，它是 &lt;code&gt;www.a.shifen.com&lt;/code&gt; 地址的别名&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/pannengzhi/p/6262076.html&#34;&gt;关于DNS,你应该知道这些&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 在 Ubuntu 22.04 上搭建 NFS Server</title>
      <link>https://bwangel.me/docs/linux/nfs-server/</link>
      <pubDate>Wed, 06 Sep 2023 08:51:39 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/nfs-server/</guid>
      <description>
        
        
        &lt;h2 id=&#34;环境准备&#34;&gt;环境准备&lt;/h2&gt;
&lt;p&gt;我准备了两台机器&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;ip&lt;/th&gt;
&lt;th&gt;user&lt;/th&gt;
&lt;th&gt;user_id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;server&lt;/td&gt;
&lt;td&gt;191.168.58.11&lt;/td&gt;
&lt;td&gt;vagrant&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;client&lt;/td&gt;
&lt;td&gt;192.168.58.1&lt;/td&gt;
&lt;td&gt;xuyundong&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;安装组件&#34;&gt;安装组件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;服务端安装 nfs server&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt update
sudo apt install nfs-kernel-server
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;客户端安装 nfs-common&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt update
sudo apt install nfs-common
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;服务端创建目录并导出&#34;&gt;服务端创建目录并导出&lt;/h2&gt;
&lt;h3 id=&#34;在服务端上创建挂载目录并设置权限&#34;&gt;在服务端上创建挂载目录，并设置权限&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo mkdir -p /mnt/share
sudo chown vagrant:vagrant /mnt/share
sudo chmod 755 /mnt/share
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;服务端上配置-nfs-export-目录&#34;&gt;服务端上配置 nfs export 目录&lt;/h3&gt;
&lt;p&gt;修改 &lt;code&gt;/etc/exports&lt;/code&gt; 文件, 加入以下内容&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/mnt/share       *(rw,async,no_subtree_check)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;关于 export 选项的解释&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rw&lt;/code&gt;: 客户端具有读和写的权限&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sync&lt;/code&gt;: 强制 nfs 在回复 client 之前将更改写入磁盘，这保证了 nfs server 的可靠性，但也降低了写入速度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;no_subtree_check&lt;/code&gt;: 此选项可防止子树检查，在子树检查过程中，主机必须为每个请求检查文件在导出的树中是否仍然可用。当客户端打开文件时重命名文件时，这可能会导致许多问题。&lt;strong&gt;通常建议禁用子树检查&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;no_root_squash&lt;/code&gt;: 当客户端以 root 权限写入文件时，nfs server 会将文件 owner 改成普通用户，当此选项开启时，nfs server 不修改 root 写入文件的 woner&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;修改完以后执行以下命令载入配置&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo systemctl restart nfs-kernel-server
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;客户端挂载&#34;&gt;客户端挂载&lt;/h2&gt;
&lt;p&gt;客户端执行以下命令挂载&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 将服务端的 nfs 目录挂载到了客户端的 /home/xuyundong/tmp/nfs_exmaple 中&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mount 192.168.58.11:/mnt/share /home/xuyundong/tmp/nfs_exmaple
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;修改 &lt;code&gt;/etc/fstab&lt;/code&gt; 文件，将以下内容写入可以让 client 在开机启动时自动挂载&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;192.168.58.11:/mnt/share   /home/xuyundong/tmp/nfs_exmaple   nfs auto,nofail,noatime,nolock,intr,tcp,actimeo=1800 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;测试访问&#34;&gt;测试访问&lt;/h2&gt;
&lt;p&gt;在客户端的目录中，&lt;strong&gt;以 uid=1000 的用户执行&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;echo &amp;#34;abc&amp;#34; &amp;gt; test.txt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以看到文件正常写入了。&lt;/p&gt;
&lt;p&gt;这是因为 client 的写入的用户的 uid 是 1000, server 中目录的 owner 的 uid 也是 1000, owner 相同就能正常写入。&lt;/p&gt;
&lt;h2 id=&#34;取消挂载&#34;&gt;取消挂载&lt;/h2&gt;
&lt;p&gt;客户端执行以下命令可以取消挂载&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo umount ~/tmp/nfs_exmaple
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nfs-mount-on-ubuntu-22-04&#34;&gt;How To Set Up an NFS Mount on Ubuntu 22.04&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: lsof</title>
      <link>https://bwangel.me/docs/linux/lsof/</link>
      <pubDate>Thu, 02 Mar 2023 12:43:09 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/lsof/</guid>
      <description>
        
        
        &lt;h2 id=&#34;按照网络状态筛选进程的-fd&#34;&gt;按照网络状态筛选进程的 fd&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo lsof -i -sTCP:LISTEN -a -p &amp;lt;pid&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-a&lt;/code&gt; 表示 and, 前后两个条件要一起生效&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-i&lt;/code&gt; 和 &lt;code&gt;-s&lt;/code&gt; 一起用，表示可以按照 TCP/UDP 状态来筛选 fd&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列出进程 &lt;code&gt;&amp;lt;pid&amp;gt;&lt;/code&gt; 建立的所有 TCP 连接&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo lsof -i -sTCP:ESTABLISHED -a -p &amp;lt;pid&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;列出进程 &lt;code&gt;&amp;lt;pid&amp;gt;&lt;/code&gt; 所有 IDLE 状态的 UDP 连接&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo lsof -i -sUDP:IDLE -a -p &amp;lt;pid&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据 Unix 发行版本的不同，TCP/UDP 状态也会有不同的名字:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常用的 TCP 状态是: &lt;code&gt;CLOSED&lt;/code&gt;, &lt;code&gt;IDLE&lt;/code&gt;, &lt;code&gt;BOUND&lt;/code&gt;, &lt;code&gt;LISTEN&lt;/code&gt;, &lt;code&gt;ESTABLISHED&lt;/code&gt;, &lt;code&gt;SYN_SENT&lt;/code&gt;, &lt;code&gt;SYN_RCDV&lt;/code&gt;, &lt;code&gt;ESTABLISHED&lt;/code&gt;, &lt;code&gt;CLOSE_WAIT&lt;/code&gt;, &lt;code&gt;FIN_WAIT1&lt;/code&gt;, &lt;code&gt;CLOSING&lt;/code&gt;, &lt;code&gt;LAST_ACK&lt;/code&gt;, &lt;code&gt;FIN_WAIT_2&lt;/code&gt;, &lt;code&gt;TIME_WAIT&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;常用的 UDP 状态是: &lt;code&gt;Unbound&lt;/code&gt;, &lt;code&gt;Idle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;按照-fd-number-查找进程的-fd&#34;&gt;按照 fd number 查找进程的 fd&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;strace&lt;/code&gt; 查看进程的系统调用的时候，经常能够看到在某个 fd 上执行读写操作，例如:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;write&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;267, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\1\0\0\0\0\0\0\0&amp;#34;&lt;/span&gt;, 8&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;       &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;5405, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;# Kubernetes-managed hosts file &amp;#34;&lt;/span&gt;..., 4096&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4096&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们想要查一下这个 267 和 5405 具体代表了什么连接，可以用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo lsof -d &amp;lt;fd_number&amp;gt; -a -p &amp;lt;pid&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;例如我利用 strace 查看飞书 app 的系统调用，看到以下的信息&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ø&amp;gt; sudo strace -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8261&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;strace: Process &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8261&lt;/span&gt; attached
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;restart_syscall&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&amp;lt;... resuming interrupted &lt;span style=&#34;color:#204a87&#34;&gt;read&lt;/span&gt; ...&amp;gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openat&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/proc/self/status&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;4, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Name:\tfeishu\nUmask:\t0002\nState:\t&amp;#34;&lt;/span&gt;..., 1024&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;close&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;4&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;                                &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;futex&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0x7ff0a7ffead8, FUTEX_WAKE_PRIVATE, 2147483647&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;futex&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0x7ff0a7ffea88, FUTEX_WAKE_PRIVATE, 1&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;recvmsg&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;23, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msg_namelen&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, 0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;         &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; -1 EAGAIN &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;资源暂时不可用&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;recvmsg&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;23, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msg_namelen&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, 0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;         &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; -1 EAGAIN &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;资源暂时不可用&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;poll&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;([{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;9, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;10, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;22, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;23, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;67, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}]&lt;/span&gt;, 5, 0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;Timeout&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;recvmsg&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;23, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msg_namelen&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, 0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;         &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; -1 EAGAIN &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;资源暂时不可用&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;recvmsg&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;23, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msg_namelen&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, 0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;         &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; -1 EAGAIN &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;资源暂时不可用&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;poll&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;([{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;9, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;10, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;22, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;23, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;67, &lt;span style=&#34;color:#000&#34;&gt;events&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}]&lt;/span&gt;, 5, 200&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;([{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;10, &lt;span style=&#34;color:#000&#34;&gt;revents&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;POLLIN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;10, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;!&amp;#34;&lt;/span&gt;, 2&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;                        &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;futex&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0x7ff0a7ffead8, FUTEX_WAKE_PRIVATE, 2147483647&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;futex&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0x7ff0a7ffea88, FUTEX_WAKE_PRIVATE, 1&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;futex&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0x7ff0a0001eb8, FUTEX_WAKE_PRIVATE, 1&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openat&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/proc/self/status&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;4, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Name:\tfeishu\nUmask:\t0002\nState:\t&amp;#34;&lt;/span&gt;..., 1024&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我想知道 fd 4 代表了什么，执行 &lt;code&gt;sudo lsof -d 4 -a -p 8261&lt;/code&gt;，可以看到它是我的电脑和 &lt;code&gt;220.181.131.241&lt;/code&gt; 建立的一个 https 连接。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ø&amp;gt; sudo lsof -d &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; -a -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8261&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;COMMAND  PID      USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;feishu  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8261&lt;/span&gt; xuyundong    4u  IPv4 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2613086&lt;/span&gt;      0t0  TCP 192.168.252.88:35810-&amp;gt;220.181.131.241:https &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;ESTABLISHED&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;查看端口占用&#34;&gt;查看端口占用&lt;/h2&gt;
&lt;p&gt;有时候我们启动程序的时候，发现端口被占用了，可以用 &lt;code&gt;lsof -i:xxx&lt;/code&gt; 来查看端口被哪个进程占用了，例如:&lt;/p&gt;
&lt;p&gt;下面这条命令显示 3306 端口被 &lt;code&gt;360702&lt;/code&gt; 和 &lt;code&gt;360709&lt;/code&gt; 两个进程占用了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ø&amp;gt; sudo lsof -i:3306
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;COMMAND      PID USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker-pr &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;360702&lt;/span&gt; root    4u  IPv4 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1842886&lt;/span&gt;      0t0  TCP *:mysql &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;LISTEN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker-pr &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;360709&lt;/span&gt; root    4u  IPv6 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1842889&lt;/span&gt;      0t0  TCP *:mysql &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;LISTEN&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;查看容器的网络调用&#34;&gt;查看容器的网络调用&lt;/h2&gt;
&lt;h3 id=&#34;构建镜像&#34;&gt;构建镜像&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;download.py&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# -*- coding: utf-8 -*-&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;requests&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;resp&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;requests&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;https://releases.ubuntu.com/22.04.2/ubuntu-22.04.2-desktop-amd64.iso?_ga=2.131295240.668169970.1684741981-917190618.1681460407&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;resp&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;status_code&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Dockerfile&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt; python:3.10&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;RUN&lt;/span&gt; pip install requests&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;COPY&lt;/span&gt; download.py /download.py&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ENTRYPOINT&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;python&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/download.py&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;准备上述两个文件，然后执行&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker build -t test_download .
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;构建我们用于调试的镜像, &lt;code&gt;test_download&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;启动阻塞的容器&#34;&gt;启动阻塞的容器&lt;/h3&gt;
&lt;p&gt;执行以下命令，启动一个阻塞在网络请求中的容器。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker run --rm test_download
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;这个例子不太好，因为 &lt;code&gt;releases.ubuntu.com&lt;/code&gt; 还比较健康，会持续地返回内容，现实中我们遇到的情况是，服务器完全不返回内容，客户端也没有设置超时时间，完全处于阻塞的状态。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;查找容器的-pid&#34;&gt;查找容器的 pid&lt;/h3&gt;
&lt;p&gt;根据容器的 ID, 我们通过 &lt;code&gt;docker inspect &amp;lt;id&amp;gt;| rg -i pid&lt;/code&gt; 可以获得容器的进程 ID&lt;/p&gt;
&lt;p&gt;如果你使用的是 containerd, 可以使用 &lt;code&gt;crictl inspect &amp;lt;id&amp;gt; | rg -i pid&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ø&amp;gt; docker ps
CONTAINER ID   IMAGE           COMMAND                 CREATED          STATUS          PORTS     NAMES
bf5846384913   test_download   &amp;#34;python /download.py&amp;#34;   37 seconds ago   Up 36 seconds             friendly_wozniak
ø&amp;gt; docker inspect bf5846384913 | rg -i pid
            &amp;#34;Pid&amp;#34;: 726678,
            &amp;#34;PidMode&amp;#34;: &amp;#34;&amp;#34;,
            &amp;#34;PidsLimit&amp;#34;: null,
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;利用-strace-查看进程的状态&#34;&gt;利用 strace 查看进程的状态&lt;/h3&gt;
&lt;p&gt;从 strace 的输出中可以看到，进程一直在从 3 号 fd 上读取数据&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root@Macmini:~# strace -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;726678&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;strace: Process &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;726678&lt;/span&gt; attached
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Z\263\351\331\315\17\330\205\222\361\21\235&amp;#39;Kp\301w\256\365|\275K\326y\350@\305\300\325\262\fk&amp;#34;&lt;/span&gt;..., 13131&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1448&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\317GKJ\324O)1\5\272\\\&amp;#34;\24\360s\177\263\223#\376\360\35\360\226\240\214mf\374\243\222\335&amp;#34;&lt;/span&gt;..., 11683&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11683&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\27\3\3@\21&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\22c\367U@\243\377\325\255\n0\376\79J\244\v9O4\233Kq\0233\304k\6\356dy\20&amp;#34;&lt;/span&gt;..., 16401&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\27\3\3@\21&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[\244K\30\7\30?[\210\313\364\335\t\321&amp;gt;l\270\2\365\262\307|\376\211.\376\342%\361\34\31\246&amp;#34;&lt;/span&gt;..., 16401&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\27\3\3@\21&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\335\373\354\320:SF\244o#\244\377Ll\21\366AT\374vgYD\2418\305\340\313||\243;&amp;#34;&lt;/span&gt;..., 16401&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\27\3\3@\21&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;X \300\240\252IoZ\352W&lt;/span&gt;$&lt;span style=&#34;color:#4e9a06&#34;&gt;\255\266\324\304q\306\23\226-b\212\300\271\222pI\270\33\tcn&amp;#34;&lt;/span&gt;..., 16401&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\27\3\3@\21&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\213\331\225\331b\2405\204\f\213\32\r\250;\250\326.\4l\221\230^0\272{\317\32he\262V\223&amp;#34;&lt;/span&gt;..., 16401&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brk&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0x55fba8f48000&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;                     &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; 0x55fba8f48000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\27\3\3@\21&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\4\317\362`-R}\360\&amp;#34;\266nZ\33\261s,\340\345\371\300;]\347\30\237\344\305\235m\360j\357&amp;#34;&lt;/span&gt;..., 16401&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\27\3\3@\21&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1v\355\312]nG\347\240\4\210\350\241\34\257\333\307\233z\261\0\6\307\2234n\21V\27\305\272\371&amp;#34;&lt;/span&gt;..., 16401&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;3, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\27\3\3@\21&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;利用-lsof-查看-fd-详细信息&#34;&gt;利用 lsof 查看 fd 详细信息&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nsenter -n -t &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;726678&lt;/span&gt; lsof -d &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; -a -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;726678&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root@Macmini:~# nsenter -n -t &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;726678&lt;/span&gt; lsof -d &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; -a -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;726678&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;COMMAND    PID USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;726678&lt;/span&gt; root    3u  IPv4 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;9813984&lt;/span&gt;      0t0  TCP 172.17.0.2:55378-&amp;gt;https-services.aerodent.canonical.com:https &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;ESTABLISHED&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到，3号fd 是一个TCP 连接，本地的 &lt;code&gt;172.17.0.2:55378&lt;/code&gt; 连接了远端的 &lt;code&gt;https-services.aerodent.canonical.com:https&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果我们不加 nsenter -n -t &lt;pid&gt; 来切换 network namespace 的话，lsof 输出的信息中就没有详细的客户端和服务端的地址了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root@Macmini:~# lsof -d &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; -a -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;729160&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;COMMAND    PID USER   FD   TYPE DEVICE SIZE/OFF    NODE NAME
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;729160&lt;/span&gt; root    3u  sock    0,8      0t0 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;9829458&lt;/span&gt; protocol: TCP
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://linux.die.net/man/8/lsof&#34;&gt;man lsof&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: ls Tips</title>
      <link>https://bwangel.me/docs/linux/ls-tips.md/</link>
      <pubDate>Tue, 16 Aug 2022 23:10:06 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/ls-tips.md/</guid>
      <description>
        
        
        &lt;h2 id=&#34;ls-按照修改时间排序&#34;&gt;ls 按照修改时间排序&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; 按照修改时间排序&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; 逆序排序&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xuyundong@Macmini:~/Github/blog$ ls -lt content/tips/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-rw-r-- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; xuyundong xuyundong  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;800&lt;/span&gt; 8月  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16&lt;/span&gt; 23:13 ls-tips.md.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-rw-r-- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; xuyundong xuyundong &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2644&lt;/span&gt; 8月  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16&lt;/span&gt; 23:05 docker-registry.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-rw-r-- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; xuyundong xuyundong &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1990&lt;/span&gt; 8月  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11&lt;/span&gt; 22:01 stty.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xuyundong@Macmini:~/Github/blog$ ls -lrt content/tips
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-rw-r-- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; xuyundong xuyundong &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1990&lt;/span&gt; 8月  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11&lt;/span&gt; 22:01 stty.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-rw-r-- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; xuyundong xuyundong &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2644&lt;/span&gt; 8月  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16&lt;/span&gt; 23:05 docker-registry.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-rw-r-- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; xuyundong xuyundong  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;897&lt;/span&gt; 8月  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16&lt;/span&gt; 23:11 ls-tips.md.md
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 查看信号的快捷键</title>
      <link>https://bwangel.me/docs/linux/stty/</link>
      <pubDate>Tue, 09 Aug 2022 21:43:40 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/stty/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;tips&#34;&gt;Tips&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;stty&lt;/code&gt;命令的作用是 &lt;code&gt;change and print terminal line settings&lt;/code&gt;，查看或修改 Linux 终端的配置。&lt;/p&gt;
&lt;p&gt;今天遇到的需求是想查一下 &lt;code&gt;Ctrl-C&lt;/code&gt; 按键发送的系统信号 ( &lt;a href=&#34;https://man7.org/linux/man-pages/man7/signal.7.html&#34;&gt;man 7 signal&lt;/a&gt; )，搜了一下发现 stty 是最方便的查询命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ø&amp;gt; stty -a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;speed &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;38400&lt;/span&gt; baud&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; rows 68&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; columns 128&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;line&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;####################  我们主要关心这两行的内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;intr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;quit&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^&lt;span style=&#34;color:#4e9a06&#34;&gt;\;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;erase&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^?&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;kill&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^U&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;eof&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^D&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;eol&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &amp;lt;undef&amp;gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;eol2&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &amp;lt;undef&amp;gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;swtch&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &amp;lt;undef&amp;gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^Q&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;stop&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^S&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;susp&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^Z&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;rprnt&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^R&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;werase&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^W&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;lnext&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^V&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;discard&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; ^O&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;min&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; 1&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;####################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-parenb -parodd -cmspar cs8 -hupcl -cstopb cread -clocal -crtscts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-ignbrk -brkint -ignpar -parmrk -inpck -istrip -inlcr -igncr icrnl -ixon -ixoff -iuclc -ixany -imaxbel -iutf8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opost -olcuc -ocrnl onlcr -onocr -onlret -ofill -ofdel nl0 cr0 tab0 bs0 vt0 ff0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;isig icanon iexten &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; echoe echok -echonl -noflsh -xcase -tostop -echoprt echoctl echoke -flusho -extproc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;stty 输出的解释如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;^C&lt;/code&gt; (&lt;code&gt;ctrl+c&lt;/code&gt;) 发送 interrupt 信号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^\&lt;/code&gt; (&lt;code&gt;ctr+\&lt;/code&gt;) 发送 quit 信号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^?&lt;/code&gt; 清除上一个输入的字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^U&lt;/code&gt; 删除当前行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^D&lt;/code&gt; 输入 EOF 字符(结束当前输入)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^S&lt;/code&gt; 暂停输出&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^Q&lt;/code&gt; 在暂停输出后，重新开始输出&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^Z&lt;/code&gt; 发送一个 terminal stop 信号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^W&lt;/code&gt; 删除最近输入的一个单词&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;while true;do
    date;
    sleep 1
done
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;(我用上面的代码测试 &lt;code&gt;^S&lt;/code&gt; 和 &lt;code&gt;^Q&lt;/code&gt;, 发现不生效)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;stty 其他输入的含义，请参考 &lt;a href=&#34;https://linux.die.net/man/1/stty&#34;&gt;man 1 stty&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://unix.stackexchange.com/a/362579/191858&#34;&gt;List of terminal generated signals (eg Ctrl-C -&amp;gt; SIGINT)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linux.die.net/man/1/stty&#34;&gt;man 1 stty&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Review 《File Descriptor Transfer over Unix Domain Sockets》</title>
      <link>https://bwangel.me/docs/linux/file-descriptor-transfer-over-unix-domain-sockets/</link>
      <pubDate>Tue, 30 Nov 2021 11:58:56 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/file-descriptor-transfer-over-unix-domain-sockets/</guid>
      <description>
        
        
        &lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用 Unix 域套接字传输文件描述符&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;原文地址: &lt;a href=&#34;https://copyconstruct.medium.com/file-descriptor-transfer-over-unix-domain-sockets-dcbbf5b3b6ec&#34;&gt;https://copyconstruct.medium.com/file-descriptor-transfer-over-unix-domain-sockets-dcbbf5b3b6ec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;12/31/2020 更新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果你使用的是较新的内核（Linux 5.6以上），随着一个新的系统调用 &lt;code&gt;pidfd_getfd&lt;/code&gt; 的引入，这种复杂性大部分已经被消除了。更多细节请参考 2020年 12-31 发表的文章&lt;a href=&#34;https://copyconstruct.medium.com/seamless-file-descriptor-transfer-between-processes-with-pidfd-and-pidfd-getfd-816afcd19ed4&#34;&gt;《用 pidfd 和 pidfd_getfd 在进程间无缝传输文件描述符》&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;昨天，我读了一篇惊人的论文，介绍了使用不同协议而且服务许多不同类型请求（长寿的TCP/UDP会话，涉及大块数据的请求等）的服务在Facebook是如何免中断发布的。&lt;/p&gt;
&lt;p&gt;Facebook 使用的一种它们叫做 &lt;code&gt;Socket Takeover&lt;/code&gt; 的技术。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Socket Takeover&lt;/code&gt; 实现了 Proxygen 的零停机重启，它以并行方式启动了一个更新的实例，接管了监听的套接字，当旧的实例进入了优雅关闭阶段。新实例负责为新连接提供服务，并响应来自 L4LB Katran 的健康检查探针。老的连接由老的实例提供服务，直到完全关闭，之后其他机制（例如下游连接重用）开始发挥作用。&lt;/p&gt;
&lt;p&gt;当我们把一个打开的FD从旧的进程传递给新的进程时，传递和接收的进程都共享监听套接字的同一个文件表项，并各自独立地处理接收的连接，在这些连接上提供连接级事务。我们利用了以下Linux内核的特性来实现这一点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CMSG&lt;/strong&gt;：&lt;code&gt;sendmsg()&lt;/code&gt; 的一个功能允许在本地进程之间发送控制信息（通常被称为辅助数据）。在 Level7 LB 进程的重启过程中，我们使用这一机制将所有 VIP ( Virtual IP of service) 的活动的监听套接字的 FD 集合从活动的实例发送至新启动的实例。这些数据是通过 &lt;code&gt;sendmsg&lt;/code&gt; 和 &lt;code&gt;recvmsg&lt;/code&gt; 在 UNIX 域套接字上交换的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SCM_RIGHTS&lt;/strong&gt;: 我们设置这个选项来发送打开的文件描述符，其数据部分包含一个打开的FD的整数数组。在接收方，这些 文件描述符的行为就像它们是用 &lt;code&gt;dup(2)&lt;/code&gt; 创建的一样。&lt;/p&gt;
&lt;p&gt;我在 Twitter 上收到了一些人的回复，他们对这竟然是可能的表示惊讶。事实上，如果你对Unix域套接字的一些特性不是很熟悉，那么论文中的上述段落可能就很难理解了。&lt;/p&gt;
&lt;p&gt;实际上，在 Unix 域套接字上传输 TCP 套接字是一种久经考验的方法，来实现 &lt;strong&gt;热重启&lt;/strong&gt; 或 &lt;strong&gt;零停机时间重启&lt;/strong&gt; 。流行的代理，如 HAProxy 和 Envoy ，使用非常类似的机制，将连接从代理的一个实例引流到另一个实例，而不丢弃任何连接。然而，许多类似的功能却并不广为人知。&lt;/p&gt;
&lt;p&gt;在这篇文章中，我想探讨 Unix 域套接字的一些特性，这些特性使它成为这些场景下的合适候选者，特别是将套接字（或任何文件描述符）从一个进程转移到另一个进程，在这两个进程之间不一定存在父子关系。&lt;/p&gt;
&lt;h2 id=&#34;unix-域套接字&#34;&gt;Unix 域套接字&lt;/h2&gt;
&lt;p&gt;众所周知，Unix 域套接字允许同一主机系统上的进程之间进行通信。Unix域套接字在许多流行的系统中都有使用。HAProxy、Envoy、AWS的 Firecracker 虚拟机监视器、Kubernetes、Docker和 Istio 等等。&lt;/p&gt;
&lt;h3 id=&#34;一个简短的教程&#34;&gt;一个简短的教程&lt;/h3&gt;
&lt;p&gt;就像网络套接字一样，Unix 域套接字也支持流和数据报文类型。然而，与采用 IP 和端口作为地址的网络套接字不同，Unix域套接字使用路径名作为地址。与网络套接字不同，Unix域套接字的 I/O 不涉及对底层设备的操作（这使得Unix域套接字与网络套接字相比，在同一主机上执行IPC要快很多）。&lt;/p&gt;
&lt;p&gt;用 &lt;code&gt;bind(2)&lt;/code&gt; 将一个名字绑定到一个Unix域套接字，在文件系统中创建一个名为 &lt;code&gt;pathname&lt;/code&gt; 的套接字文件。然而，这个文件与你可能创建的任何普通文件不同。&lt;/p&gt;
&lt;p&gt;一个简单的Go程序在 Unix 域套接字上创建一个监听的 &amp;ldquo;Echo 服务器&amp;rdquo;，如下所示:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;io&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;net&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;syscall&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;addr&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/tmp/uds.sock&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#000&#34;&gt;syscall&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Unlink&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;addr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#000&#34;&gt;l&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;net&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Listen&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;unix&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;addr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#000&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Fatal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;err&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;l&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Close&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;l&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Accept&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#000&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Fatal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;err&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;go&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;net&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Conn&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#000&#34;&gt;io&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Copy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Close&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你建立并运行这个程序，可以观察到几个有趣的事实。&lt;/p&gt;
&lt;h3 id=&#34;socket-文件--普通文件&#34;&gt;Socket 文件 != 普通文件&lt;/h3&gt;
&lt;p&gt;首先，套接字文件 &lt;code&gt;/tmp/uds.sock&lt;/code&gt; 被标记为一个套接字。当使用 &lt;code&gt;stat()&lt;/code&gt; 调用查看这个路径名时，它在stat结构的&lt;code&gt;st_mode&lt;/code&gt;字段的文件类型部分返回值 &lt;code&gt;S_IFSOCK&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;当用&lt;code&gt;ls -l&lt;/code&gt;查看时，UNIX 域套接字在第一列显示为s类型，而 &lt;code&gt;ls -F&lt;/code&gt; 在套接字路径名上附加一个等号（=）。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@1fd53621847b:~/uds# ./uds
^C
root@1fd53621847b:~/uds# ls -ls /tmp
total 0
0 srwxr-xr-x 1 root root 0 Aug  5 01:45 uds.sock
root@1fd53621847b:~/uds# stat /tmp/uds.sock
File: /tmp/uds.sock
Size: 0          Blocks: 0          IO Block: 4096   socket
Device: 71h/113d Inode: 1835567     Links: 1
Access: (0755/srwxr-xr-x)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2020-08-05 01:45:41.650709000 +0000
Modify: 2020-08-05 01:45:41.650709000 +0000
Change: 2020-08-05 01:45:41.650709000 +0000

Birth: -

root@5247072fc542:~/uds# ls -F /tmp
uds.sock=
root@5247072fc542:~/uds#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;对文件起作用的普通系统调用在套接字文件上不起作用：这意味着像 &lt;code&gt;open()&lt;/code&gt; 、&lt;code&gt;close()&lt;/code&gt; 、&lt;code&gt;read()&lt;/code&gt; 这样的系统调用不能用于套接字文件。相反，像 &lt;code&gt;socket()&lt;/code&gt; 、&lt;code&gt;bind()&lt;/code&gt; 、&lt;code&gt;recv()&lt;/code&gt; 、&lt;code&gt;sendmsg()&lt;/code&gt; 、&lt;code&gt;recvmsg()&lt;/code&gt; 等套接字相关的系统调用可以在 Unix域套接字上工作。&lt;/p&gt;
&lt;p&gt;另一个关于套接字的有趣事实是，它不是在套接字被关闭的时候删除，而是通过系统调用来删除&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 MacOS 上调用 &lt;code&gt;unlink(2)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在 Linux 上调用 &lt;code&gt;remove()&lt;/code&gt; 或使用地更普遍的 &lt;code&gt;unlink(2)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Linux 上，Unix 域套接字的地址通过如下的结构来表示:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;struct sockaddr_un {
      sa_family_t sun_family; /* Always AF_UNIX */
      char sun_path[108]; /* Pathname */
};
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在 MacOS 上，地址通过如下的结构表示:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;struct sockaddr_un {
     u_char  sun_len;
     u_char  sun_family;
     char    sun_path[104];
};
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;使用-bind2-绑定一个已经存在的路径将会失败&#34;&gt;使用 bind(2) 绑定一个已经存在的路径将会失败&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;SO_REUSEPORT&lt;/code&gt; 选项允许任何指定主机上的多个网络套接字连接到同一地址和端口。第一个试图绑定给定端口的套接字需要设置 &lt;code&gt;SO_REUSEPORT&lt;/code&gt; 选项，任何后续的套接字都可以绑定到同一端口。&lt;/p&gt;
&lt;p&gt;对 &lt;code&gt;SO_REUSEPORT&lt;/code&gt; 的支持是在 Linux 3.9及以上版本中引入的。然而，在 Linux 上，所有想共享同一地址和端口组合的套接字必须属于共享同一有效UID的进程。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fd&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;domain&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;socktype&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;optval&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;setsockopt&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sfd&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SOL_SOCKET&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SO_REUSEPORT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;optval&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;optval&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;bind&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sfd&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;sockaddr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;addr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;addrlen&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然而，两个 Unix 域套接字无法绑定相同的路径。&lt;/p&gt;
&lt;h2 id=&#34;socketpair&#34;&gt;SOCKETPAIR&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;socketpair()&lt;/code&gt; 函数创建了两个套接字，然后将其连接在一起。从某种程度上说，这与 &lt;strong&gt;管道&lt;/strong&gt; 非常相似，只是它支持数据的双向传输。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;socketpair&lt;/code&gt; 只对 Unix 域套接字起作用。它返回两个已经连接在一起的文件描述符（所以我们不必在开始传输数据之前
, 执行 &lt;code&gt;socket&lt;/code&gt; -&amp;gt; &lt;code&gt;bind&lt;/code&gt; -&amp;gt; &lt;code&gt;listen&lt;/code&gt; -&amp;gt; &lt;code&gt;accept&lt;/code&gt;的流程来建立一个监听套接字。也不必在开始传输数据之前，执行 &lt;code&gt;socket&lt;/code&gt; -&amp;gt; &lt;code&gt;connect&lt;/code&gt; 的流程创建一个连接到监听套接字的客户端）。&lt;/p&gt;
&lt;h2 id=&#34;在-unux-域套接字上传输数据&#34;&gt;在 Unux 域套接字上传输数据&lt;/h2&gt;
&lt;p&gt;现在我们已经确定 Unix 域套接字允许同一主机上的两个进程进行通信，现在是时候探索什么样的数据可以通过 Unix 域套接字传输。&lt;/p&gt;
&lt;p&gt;由于Unix域套接字在许多方面与网络套接字相似，任何通常可以通过网络套接字发送的数据都可以通过Unix域套接字发送。&lt;/p&gt;
&lt;p&gt;此外，特殊的系统调用 &lt;code&gt;sendmsg&lt;/code&gt; 和 &lt;code&gt;recvmsg&lt;/code&gt; 允许在Unix域套接字上发送一个特殊的消息。这个消息由内核特别处理，它允许从发送者向接收者传递打开的 &lt;strong&gt;File Descriptions&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;file-descriptors文件描述符-vs-file-description-文件描述&#34;&gt;File Descriptors(文件描述符) VS File Description (文件描述)&lt;/h3&gt;
&lt;p&gt;注意上一段我使用了术语 文件描述(&lt;code&gt;File descripTION&lt;/code&gt;)，而不是文件描述符 (&lt;strong&gt;file descripTOR&lt;/strong&gt;)。它们两者的区别是微妙的而且往往不被人理解。&lt;/p&gt;
&lt;p&gt;文件描述符实际上只是一个进程内(不可跨进程使用)指向底层内核数据结构的指针，该结构被称为文件描述（&lt;strong&gt;File Description&lt;/strong&gt;）。内核维护着一个所有打开的文件描述的表格，称为打开文件表(&lt;strong&gt;open file table&lt;/strong&gt;)。如果两个进程（A和B）试图打开同一个文件，这两个进程可能有自己独立的文件描述符，它们指向开放文件表中的同一个文件描述。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://passage-1253400711.cos.ap-beijing.myqcloud.com//2021-11-30-142542.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;所以，在 Unix 域套接字上使用 &lt;code&gt;sendmsg&lt;/code&gt; 发送文件描述符实际上意味着发送 &lt;strong&gt;文件描述&lt;/strong&gt; 的引用。如果进程 A 向 进程 B 发送文件描述符 0 (fd0)，该文件描述符在进程 B 中很可能被数字3(fd3) 所引用。&lt;/p&gt;
&lt;p&gt;发送进程在 Unix 域套接字上调用 &lt;code&gt;sendmsg&lt;/code&gt; 发送文件描述符，接收进程在 Unix 域套接字上调用 &lt;code&gt;recvmsg&lt;/code&gt; 来接受文件描述符。&lt;/p&gt;
&lt;p&gt;发送进程通过 &lt;code&gt;sendmsg&lt;/code&gt; 发送文件描述给接收进程，接收进程通过 &lt;code&gt;recvmsg&lt;/code&gt; 接收该文件描述。即使发送进程在发送完成后关闭了该文件描述所对应的文件描述符，而接收进程还未调用 &lt;code&gt;recvmsg&lt;/code&gt; 接收它，该文件描述依然对接收进程保持打开状态。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;发送文件描述符时，文件描述的引用次数会+1,直到文件描述的引用次数下降到0, 内核才会将文件描述从 &lt;code&gt;打开文件表(open file table)&lt;/code&gt; 中删除该文件描述。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;即使发送进程在接收进程调用 recvmsg 之前关闭了引用通过 sendmsg 传递的文件描述的文件描述符，该文件描述符仍然对接收进程开放。发送描述符时，描述符的引用次数会增加1。内核只有在引用计数下降到0时才会从其开放文件表中删除文件描述。&lt;/p&gt;
&lt;h3 id=&#34;sendmsg-和-recvmsg&#34;&gt;sendmsg 和 recvmsg&lt;/h3&gt;
&lt;p&gt;在 Linux 中 &lt;code&gt;sendmsg&lt;/code&gt; 函数的签名如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ssize_t&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;sendmsg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;msghdr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;message&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;flags&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;与 &lt;code&gt;sendmsg&lt;/code&gt; 对应的是 &lt;code&gt;recvmsg&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ssize_t&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;recvmsg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;sockfd&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;msghdr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;flags&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;人们可以用 &lt;code&gt;sendmsg&lt;/code&gt; 在 Unix 域套接字上传输的特殊消息是由 &lt;code&gt;msghdr&lt;/code&gt; 指定的。希望将文件描述发送给另一个进程的进程创建一个 &lt;code&gt;msghdr&lt;/code&gt; 结构，其中包含要传递的描述。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;msghdr&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt;            &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msg_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/* optional address */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;socklen_t&lt;/span&gt;       &lt;span style=&#34;color:#000&#34;&gt;msg_namelen&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/* size of address */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;struct&lt;/span&gt;          &lt;span style=&#34;color:#000&#34;&gt;iovec&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msg_iov&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/* scatter/gather array */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;             &lt;span style=&#34;color:#000&#34;&gt;msg_iovlen&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;     &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/* # elements in msg_iov */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt;            &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msg_control&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;   &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/* ancillary data, see below */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;socklen_t&lt;/span&gt;       &lt;span style=&#34;color:#000&#34;&gt;msg_controllen&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/* ancillary data buffer len */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;             &lt;span style=&#34;color:#000&#34;&gt;msg_flags&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/* flags on received message */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;msghdr&lt;/code&gt; 结构的 &lt;code&gt;msg_control&lt;/code&gt; 成员，其长度为 &lt;code&gt;msg_controllen&lt;/code&gt; ，指向一个如下形式的消息缓冲区:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cmsghdr&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;socklen_t&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cmsg_len&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/* data byte count, including header */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;       &lt;span style=&#34;color:#000&#34;&gt;cmsg_level&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/* originating protocol */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;       &lt;span style=&#34;color:#000&#34;&gt;cmsg_type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;   &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/* protocol-specific type */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/* followed by */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cmsg_data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 POSIX 中，带有附加数据的 &lt;code&gt;cmsghdr&lt;/code&gt; 结构的缓冲区被称为辅助数据(ancillary data)。在 Linux 上，每个套接字允许的最大缓冲区大小可以通过修改 &lt;code&gt;/proc/sys/net/core/optmem_max&lt;/code&gt; 来设置。&lt;/p&gt;
&lt;h2 id=&#34;辅助数据传输&#34;&gt;辅助数据传输&lt;/h2&gt;
&lt;p&gt;虽然这种数据传输有大量的陷阱，但如果使用得当，它可以成为一个相当强大的机制来实现一些目标。&lt;/p&gt;
&lt;p&gt;在Linux上，有三种类型的辅助数据可以在两个Unix域套接字之间共享。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SCM_RIGHTS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SCM_CREDENTIALS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SCM_SECURITY&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这三种类型的辅助数组仅应该通过下面的宏定义来访问，而不应该直接使用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cmsghdr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CMSG_FIRSTHDR&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;msghdr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msgh&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cmsghdr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CMSG_NXTHDR&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;msghdr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msgh&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cmsghdr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;cmsg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;size_t&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CMSG_ALIGN&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;size_t&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;size_t&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CMSG_SPACE&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;size_t&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;size_t&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CMSG_LEN&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;size_t&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CMSG_DATA&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cmsghdr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;cmsg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我从来没有使用后两者的需要，&lt;code&gt;SCM_RIGHTS&lt;/code&gt; 是我希望在这篇文章中进一步探讨的。&lt;/p&gt;
&lt;h3 id=&#34;scm_rights&#34;&gt;SCM_RIGHTS&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;SCM_RIGHTS&lt;/code&gt; 允许进程使用 &lt;code&gt;sendmsg/recvmsg&lt;/code&gt; 从另一个进程发送/接收一组打开的文件描述符。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cmsghdr&lt;/code&gt; 结构体的成员 &lt;code&gt;cmsg_data&lt;/code&gt; 可以包含一个进程想要发送的文件描述符的数组。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;struct cmsghdr {
    socklen_t cmsg_len;    /* data byte count, including header */
    int       cmsg_level;  /* originating protocol */
    int       cmsg_type;   /* protocol-specific type */
    /* followed by */
    unsigned char cmsg_data[];
};
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接收进程使用 &lt;code&gt;recvmsg&lt;/code&gt; 接收数据。&lt;/p&gt;
&lt;p&gt;《Linux Programming Interface》有一个使用 &lt;code&gt;sendmsg&lt;/code&gt; 和 &lt;code&gt;recvmsg&lt;/code&gt; 函数的&lt;a href=&#34;https://man7.org/tlpi/code/online/dist/sockets/scm_rights_send.c.html&#34;&gt;良好示例&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;scm_rights-的陷阱&#34;&gt;SCM_RIGHTS 的陷阱&lt;/h2&gt;
&lt;p&gt;正如上文所讲，使用 Unix 域套接字传输辅助数据有很多的陷阱。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Need to send some “real” data along with the ancillary message&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;需要在发送辅助数据的同时发送一些真实的数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 Linux 上，如果想要成功地在 &lt;strong&gt;流式(stream)&lt;/strong&gt; Unix 域套接字上发送辅助数据，至少要发送一个字节的真实数据。&lt;/p&gt;
&lt;p&gt;然而，如果想要在 &lt;strong&gt;数据报式(datagram)&lt;/strong&gt; 的 Unix 域套接字上发送辅助数据，不需要发送任何附带的真实数据。也就是说，在通过数据报套接字发送辅助数据时，便携式应用程序还应该包括至少一个字节的真实数据。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;File Descriptors can be dropped&lt;/p&gt;
&lt;p&gt;文件描述符可以被丢弃&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果用于接收包含文件描述符的辅助数据的缓冲区 &lt;code&gt;cmsg_data&lt;/code&gt; 太小（或没有），那么辅助数据被截断（或丢弃），多余的文件描述符在接收进程中被自动关闭。&lt;/p&gt;
&lt;p&gt;如果在辅助数据中收到的文件描述符的数量导致进程超过其 &lt;code&gt;RLIMIT_NOFILE&lt;/code&gt; 资源限制，则多余的文件描述符将在接收进程中自动关闭。不能在多个 &lt;code&gt;recvmsg&lt;/code&gt; 调用中分割列表。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;recvmsg quirks&lt;/p&gt;
&lt;p&gt;recvmsg 的怪异情况&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;sendmsg&lt;/code&gt; 和 &lt;code&gt;recvmsg&lt;/code&gt; 的作用类似于 &lt;code&gt;send&lt;/code&gt; 和 &lt;code&gt;recv&lt;/code&gt; 系统调用，在每个 &lt;code&gt;send&lt;/code&gt; 调用和每个 &lt;code&gt;recv&lt;/code&gt; 调用之间没有1：1的映射。&lt;/p&gt;
&lt;p&gt;一个 &lt;code&gt;recvmsg&lt;/code&gt; 调用可以从多个 &lt;code&gt;sendmsg&lt;/code&gt; 调用中读取数据。同样地，它可能需要多个&lt;code&gt;recvmsg&lt;/code&gt;调用来消耗一个&lt;code&gt;sendmsg&lt;/code&gt; 调用所发送的数据。这有严重的、令人惊讶的影响，其中一些已经在这里报告。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Limit on the number of File Descriptions&lt;/p&gt;
&lt;p&gt;文件描述符的数量限制&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;内核常量 &lt;code&gt;SCM_MAX_FD&lt;/code&gt; ( 253 (或者在2.6.38之前的内核中为255))定义了数组中文件描述符的数量限制。&lt;/p&gt;
&lt;p&gt;试图发送一个大于这个限制的数组会导致 &lt;code&gt;sendmsg&lt;/code&gt; 失败，错误是 &lt;code&gt;EINVAL&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;什么时候发送文件描述符是有用的&#34;&gt;什么时候发送文件描述符是有用的&lt;/h2&gt;
&lt;p&gt;一个非常具体的现实世界的使用案例是零停机时间的代理重载。&lt;/p&gt;
&lt;p&gt;任何曾经使用过HAProxy的人都可以证明，&amp;ldquo;零停机时间的配置重载 &amp;ldquo;在很长一段时间内并不是一个真正的东西。通常，大量的&lt;a href=&#34;https://engineeringblog.yelp.com/2015/04/true-zero-downtime-haproxy-reloads.html&#34;&gt;Rube Goldberg-esque&lt;/a&gt; Hack 被用来实现这一目标。&lt;/p&gt;
&lt;p&gt;在2017年底，HAProxy 1.8 支持无中断重载，通过将监听套接字文件描述符从旧的 HAProxy 进程转移到新的进程中来实现。Envoy使用 &lt;a href=&#34;https://blog.envoyproxy.io/envoy-hot-restart-1d16b14555b5&#34;&gt;类似的机制&lt;/a&gt; 进行热重启，文件描述符通过Unix域套接字传递。&lt;/p&gt;
&lt;p&gt;2018年底，Cloudflare 在&lt;a href=&#34;https://blog.cloudflare.com/know-your-scm_rights/&#34;&gt;博客&lt;/a&gt; 中介绍了其使用的将文件描述符从nginx转移到Go TLS 1.3代理。&lt;/p&gt;
&lt;p&gt;促使我写下这篇博文的关于Facebook如何实现零停机发布的论文，使用了与 &lt;code&gt;CMSG + SCM_RIGHTS&lt;/code&gt; 相同的技巧，将活的文件描述符从将要结束的进程传递到新发布的进程。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;如果使用得当，通过Unix域套接字传输文件描述符可以被证明是非常强大的。我希望这篇文章能让你对Unix域套接字和它的功能有一个更好的理解。&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.man7.org/linux/man-pages/man7/unix.7.html&#34;&gt;https://www.man7.org/linux/man-pages/man7/unix.7.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.cloudflare.com/know-your-scm_rights/&#34;&gt;https://blog.cloudflare.com/know-your-scm_rights/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LWN.net has an interesting article on creating cycles when passing file descriptions over a Unix domain socket and implications for the fabulous new io_uring kernel API. &lt;a href=&#34;https://lwn.net/Articles/779472/&#34;&gt;https://lwn.net/Articles/779472/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The Linux Programming Interface &lt;a href=&#34;https://learning.oreilly.com/library/view/the-linux-programming/9781593272203/&#34;&gt;https://learning.oreilly.com/library/view/the-linux-programming/9781593272203/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;UNIX Network Programming: The Sockets Networking API &lt;a href=&#34;https://learning.oreilly.com/library/view/the-sockets-networking/0131411551/&#34;&gt;https://learning.oreilly.com/library/view/the-sockets-networking/0131411551/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Glob 语法解析</title>
      <link>https://bwangel.me/docs/linux/glob-%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Mon, 18 Oct 2021 11:38:23 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/glob-%E8%AF%AD%E6%B3%95/</guid>
      <description>
        
        
        &lt;p&gt;Glob 语法&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tips&#34;&gt;Tips&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;通配符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;th&gt;例子&lt;/th&gt;
&lt;th&gt;匹配&lt;/th&gt;
&lt;th&gt;不匹配&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配任意数量的任何字符，包括无&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Law*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Law, Laws, Lawyer&lt;/td&gt;
&lt;td&gt;GrokLaw, La, aw&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;匹配任何 单个 字符&lt;/td&gt;
&lt;td&gt;?at&lt;/td&gt;
&lt;td&gt;Cat, cat, Bat, bat&lt;/td&gt;
&lt;td&gt;at&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[abc]&lt;/td&gt;
&lt;td&gt;匹配括号中给出的一个字符&lt;/td&gt;
&lt;td&gt;[CB]at&lt;/td&gt;
&lt;td&gt;Cat, Bat&lt;/td&gt;
&lt;td&gt;cat, bat&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[a-z]&lt;/td&gt;
&lt;td&gt;匹配括号中给出的范围中的一个字符&lt;/td&gt;
&lt;td&gt;Letter[0-9]&lt;/td&gt;
&lt;td&gt;Letter0, Letter1 … Letter9&lt;/td&gt;
&lt;td&gt;Letters, Letter, Letter10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[!abc]&lt;/td&gt;
&lt;td&gt;匹配括号中未给出的一个字符&lt;/td&gt;
&lt;td&gt;[!C]at&lt;/td&gt;
&lt;td&gt;Bat, bat, cat&lt;/td&gt;
&lt;td&gt;Cat&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[!a-z]&lt;/td&gt;
&lt;td&gt;匹配不在括号内给定范围内的一个字符&lt;/td&gt;
&lt;td&gt;Letter[!3-5]&lt;/td&gt;
&lt;td&gt;Letter1…&lt;/td&gt;
&lt;td&gt;Letter3 … Letter5, Letterxx&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Gitignore&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;git 的 .gitignore 文件可以使用 glob 模式匹配， 另外还有一些规则：&lt;/p&gt;
&lt;p&gt;所有空行或者以 # 开头的行都会被 Git 忽略
匹配模式可以以 / 开头防止递归
匹配模式可以以 / 结尾指定目录
要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号 ! 取反&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 有进行 glob 匹配的标准库， 使用也很简单：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;glob&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# glob 只有两个函数， 功能差不多， 只不过一个返回列表， 一个返回迭代器&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;glob&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;glob&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;*.org&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 返回所有后缀名为 .org 的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;glob&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;iglob&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;*/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 返回匹配所有目录的迭代器&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rgb-24bit.github.io/blog/2018/glob.html&#34;&gt;Glob 语法及解析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 词法分析器生成工具 Lex 简介</title>
      <link>https://bwangel.me/docs/linux/flex/</link>
      <pubDate>Sun, 15 Dec 2019 14:53:46 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/flex/</guid>
      <description>
        
        
        &lt;blockquote&gt;
&lt;p&gt;结合例子简单介绍了Lex 程序和 Lex 工具的用法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;lex-说明&#34;&gt;Lex 说明&lt;/h2&gt;
&lt;p&gt;Lex 是一个词法分析器的生成工具，它支持使用正则表达式来描述各个词法单元的模式，由此给出一个词法分析器的规约，并生成相应的实现代码。
Lex 程序的输入方法称为 Lex 语言，而 Lex 程序本身被称为 Lex 编译器，Flex 是 Lex 编译器的一种替代实现( lex，flex 的关系和 cc，gcc 的关系很相似)。&lt;/p&gt;
&lt;p&gt;在本文中，我们将会介绍 Lex 语言，并书写一个简单的 Lex 程序，进行词法分析，并输出分析结果。&lt;/p&gt;
&lt;h2 id=&#34;lex-程序的使用&#34;&gt;Lex 程序的使用&lt;/h2&gt;
&lt;p&gt;Lex 程序的使用方法如下图所示:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://passage-1253400711.cos-website.ap-beijing.myqcloud.com/2019-12-15-101534.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过 lex 语言写一个 lex 源程序 lex.l&lt;/li&gt;
&lt;li&gt;使用 Lex 编译器 flex 将 lex.l 编译成 C 代码, lex.yy.c&lt;/li&gt;
&lt;li&gt;通过 C 编译器 cc 将 lex.yy.c 编译成可执行程序&lt;/li&gt;
&lt;li&gt;运行可执行程序，输入源程序，输出词法单元序列&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;lex-程序的结构&#34;&gt;Lex 程序的结构&lt;/h2&gt;
&lt;p&gt;一个 Lex 程序通常具有如下形式:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;声明部分
%%
转换规则
%%
辅助函数
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;声明部分&#34;&gt;声明部分&lt;/h3&gt;
&lt;p&gt;声明部分通常包括&lt;code&gt;变量&lt;/code&gt;，&lt;code&gt;明示常量&lt;/code&gt;和正则表达式的定义，&lt;code&gt;明示常量&lt;/code&gt;是一个值为数字的标识符，用来表示词法单元的类型。&lt;/p&gt;
&lt;h3 id=&#34;转换规则&#34;&gt;转换规则&lt;/h3&gt;
&lt;p&gt;转换规则具有如下的形式: &lt;code&gt;模式 { 动作 }&lt;/code&gt;。每个模式是一个正则表达式，可以使用声明部分给出的正则定义。动作部分是代码片段，通常用 C 语言编写。&lt;/p&gt;
&lt;h3 id=&#34;辅助函数&#34;&gt;辅助函数&lt;/h3&gt;
&lt;p&gt;这个部分中定义了各个动作所需要的函数，也可以包含 main 函数，这部分的代码将会放到输出的 C 代码中。&lt;/p&gt;
&lt;h2 id=&#34;lex-程序的工作方式&#34;&gt;Lex 程序的工作方式&lt;/h2&gt;
&lt;p&gt;Lex 程序提供了一个函数&lt;code&gt;int yylex()&lt;/code&gt;和两个变量&lt;code&gt;yyleng&lt;/code&gt;，&lt;code&gt;yytext&lt;/code&gt;供外部(通常是语法分析器)读取，调用。&lt;/p&gt;
&lt;p&gt;当调用&lt;code&gt;yylex&lt;/code&gt;的时候，程序会从&lt;code&gt;yyin&lt;/code&gt;指针所指向的输入流中逐个读入字符，程序发现了最长的与某个模式 $P_i$ 匹配的字符串后，会将该字符串存入到&lt;code&gt;yytext&lt;/code&gt;变量中，并设置&lt;code&gt;yyleng&lt;/code&gt;变量为该字符串的长度，该字符串也就是词法分析程序分析出来的一个词法单元。&lt;/p&gt;
&lt;p&gt;然后，词法分析程序会执行模式 $P_i$ 对应的动作 $A_i$，并使用&lt;code&gt;yylex&lt;/code&gt;函数返回 $A_i$ 的返回值(通常是词法单元的类型)。&lt;/p&gt;
&lt;h2 id=&#34;词法分析的例子&#34;&gt;词法分析的例子&lt;/h2&gt;
&lt;p&gt;在下面的例子中，我们将会编写 Lex 程序，并生成生成一个词法分析器，分析 &lt;code&gt;test1.p&lt;/code&gt; 程序，输出其词法单元和类型。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;test1.p&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;while a &amp;gt;= -1.2E-2
do b&amp;lt;=2
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;声明部分-1&#34;&gt;声明部分&lt;/h3&gt;
&lt;p&gt;首先定义的是声明部分，其中包含词法单元的类型，和一些正则表达式的定义&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-lex&#34; data-lang=&#34;lex&#34;&gt;/* 明示常量的定义 */
#define IF 1
#define THEN 2
#define ELSE 3
#define ID 4
#define NUMBER 5
#define RELOP 6
#define DO 7
#define WHILE 8

%}

/* 正则表达式的定义 */
delim       [ \t\n]
ws          {delim}+
letter      [A-Za-z]
digit       [0-9]
id          {letter}({letter}|{digit})*
number      [+-]?{digit}+(\.{digit}+)?(E[+-]?{digit}+)?
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;需要注意的是，正则表达式中使用大括号包裹起来的内容表示嵌入另外一个正则表达式，例如&lt;code&gt;ws&lt;/code&gt;的定义&lt;code&gt;{delim}+&lt;/code&gt;就表示将之前定义的正则表达式&lt;code&gt;delim&lt;/code&gt;嵌入进来。&lt;/p&gt;
&lt;h3 id=&#34;转换部分&#34;&gt;转换部分&lt;/h3&gt;
&lt;p&gt;然后是转换部分，定义如下:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-lex&#34; data-lang=&#34;lex&#34;&gt;{ws}        {  }
if          { return(IF); }
then        { return(THEN); }
while       { return(WHILE); }
do          { return(DO); }
else        { return(ELSE); }
{id}        { return(ID); }
{number}    { return(NUMBER); }
&amp;#34;&amp;lt;&amp;#34;         { return(RELOP); }
&amp;#34;&amp;lt;=&amp;#34;        { return(RELOP); }
&amp;#34;&amp;lt;&amp;gt;&amp;#34;        { return(RELOP); }
&amp;#34;&amp;gt;&amp;#34;         { return(RELOP); }
&amp;#34;&amp;gt;=&amp;#34;        { return(RELOP); }
&amp;#34;=&amp;#34;         { return(RELOP); }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里的规则对应的动作都很简单，直接返回词法单元对应的类型。&lt;/p&gt;
&lt;h3 id=&#34;辅助函数-1&#34;&gt;辅助函数&lt;/h3&gt;
&lt;p&gt;最后是辅助函数部分，由于我们想输出一个可执行文件，所以这里会写一个 main 函数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;writeout&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f57900&#34;&gt;RELOP&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fprintf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;yyout&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;(RELOP, &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;yytext&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f57900&#34;&gt;WHILE&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fprintf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;yyout&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;(WHILE, &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;yytext&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f57900&#34;&gt;DO&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fprintf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;yyout&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;(DO, &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;yytext&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f57900&#34;&gt;NUMBER&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fprintf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;yyout&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;(NUM, &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;yytext&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f57900&#34;&gt;ID&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fprintf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;yyout&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;(ID, &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;yytext&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;main&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;argc&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;**&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;argv&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;argc&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;yyin&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fopen&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;argv&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;printf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Can&amp;#39;t open file %s&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;argv&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;argc&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;yyout&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fopen&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;argv&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/* yyin和yyout是lex中定义的输入输出文件指针，它们指明了
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     * lex生成的词法分析器从哪里获得输入和输出到哪里。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     * 默认：stdin，stdout。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;yylex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;writeout&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;argc&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;fclose&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;yyin&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;argc&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fclose&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;yyout&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们在 main 函数中调用&lt;code&gt;yylex&lt;/code&gt;函数获取到一个词法单元，然后调用&lt;code&gt;writeout&lt;/code&gt;函数，将这个词法单元及其类型，输出到&lt;code&gt;stdout&lt;/code&gt;中。&lt;/p&gt;
&lt;h3 id=&#34;程序的编译执行&#34;&gt;程序的编译执行&lt;/h3&gt;
&lt;p&gt;将上述程序写入到 lex.l 中，在 Mac 系统上，执行以下命令:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// flex 可以通过 brew install flex 安装
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flex lex.l
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cc lex.yy.c -o lex -ll
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上述程序会生成可执行文件&lt;code&gt;lex&lt;/code&gt;，然后我们执行 &lt;code&gt;./lex test1.p&lt;/code&gt;，就可以看到程序输出了词法单元及其类型。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; ./lex test1.p
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;WHILE, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;while&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;ID, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;RELOP, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;gt;=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;NUM, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;-1.2E-2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;DO, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;do&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;ID, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;RELOP, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;NUM, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上述例子的完整代码可以在 &lt;a href=&#34;https://github.com/bwangelme/simple_calc/tree/896cc28/lex_tutorial&#34;&gt;Github@896cc28&lt;/a&gt; 中找到。&lt;/p&gt;
&lt;h2 id=&#34;lex-中的冲突解决&#34;&gt;Lex 中的冲突解决&lt;/h2&gt;
&lt;p&gt;在 Lex 编译器解析输入流时，针对同一个字符串可能会有多种解析模式，例如上述例子中，&lt;code&gt;&amp;lt;=&lt;/code&gt;可以解析成&lt;code&gt;(RELOP, &amp;quot;&amp;lt;&amp;quot;)&lt;/code&gt;, &lt;code&gt;(RELOP, &amp;quot;=&amp;quot;)&lt;/code&gt;，也可以解析成&lt;code&gt;(RELOP, &amp;quot;&amp;lt;=&amp;quot;)&lt;/code&gt;。当遇到这种冲突情况时，Lex 编译器遵循以下的规则:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;总是选择最长的前缀进行匹配&lt;/li&gt;
&lt;li&gt;如果最长的可能前缀与多个模式匹配，总是选择在 Lex 程序中先被列出的模式。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;根据第二点可得，在上述例子中，&lt;code&gt;{id}&lt;/code&gt;需要定义在&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;then&lt;/code&gt;等关键字的后面，否则这些关键字就会被解析成 ID 了。&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/3296317/&#34;&gt;编译原理 3.5 节&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 说说Bash中的几个重定向</title>
      <link>https://bwangel.me/docs/linux/bash-%E9%87%8D%E5%AE%9A%E5%90%91/</link>
      <pubDate>Sun, 13 Aug 2017 14:10:48 +0000</pubDate>
      
      <guid>https://bwangel.me/docs/linux/bash-%E9%87%8D%E5%AE%9A%E5%90%91/</guid>
      <description>
        
        
        &lt;blockquote&gt;
&lt;p&gt;摘要:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Bash中&lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;amp;&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;gt;&amp;amp;&lt;/code&gt;三者的区别&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近看脚本的时候，发现了有的地方使用了类似&lt;code&gt;some-command &amp;amp;&amp;gt; /dev/null&lt;/code&gt;这样的命令，然后不禁想起来还有一种重定向的语法是&lt;code&gt;&amp;gt;&amp;amp;&lt;/code&gt;，突然就觉得有点混乱了，特来捋一捋。&lt;/p&gt;
&lt;h1 id=&#34;-和-操作符&#34;&gt;&amp;gt;、&amp;amp;&amp;gt; 和 &amp;gt;&amp;amp;操作符&lt;/h1&gt;
&lt;h2 id=&#34;语法说明&#34;&gt;语法说明&lt;/h2&gt;
&lt;p&gt;这三个操作符的语法分别如下所示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; Syntax: &lt;code&gt;file_descriptor(可选)&amp;gt;file_name&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里的&lt;code&gt;file_descriptor&lt;/code&gt;是可选的，如果没有的话，默认是1(stdout)。它的作用是将某个命令的某个输出(file_descriptor所代表的输出)重定向到一个文件，例如&lt;code&gt;find / &amp;gt; file&lt;/code&gt;和&lt;code&gt;find / 2&amp;gt; file&lt;/code&gt;这两个命令就分别是将stdout和stderr输出到文件&lt;code&gt;file&lt;/code&gt;中去。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&amp;amp;&lt;/code&gt; Syntax: &lt;code&gt;file_descriptor1(可选)&amp;gt;&amp;amp;file_descriptor2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里的&lt;code&gt;file_descriptor1&lt;/code&gt;是可选的，如果没有的话，默认是1(stdout)。它的作用是将某个命令的&lt;code&gt;file_descriptor1&lt;/code&gt;描述符的输出(例如1代表标准输出)重定向到此命令的描述符&lt;code&gt;file_descriptor2&lt;/code&gt;中。例如&lt;code&gt;find / 1&amp;gt;file 2&amp;gt;&amp;amp;1 &lt;/code&gt;这条命令就是将find命令的stderr(2)重定向到stdout(1)，然后再将stdout输出到文件&lt;code&gt;file&lt;/code&gt;中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&amp;gt;&lt;/code&gt; Syntax: &lt;code&gt;&amp;amp;&amp;gt; file_name&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种形式的重定向，在语义上等价于&lt;code&gt;&amp;gt;filename 2&amp;gt;&amp;amp;1&lt;/code&gt;(参见&lt;a href=&#34;https://superuser.com/questions/335396/what-is-the-difference-between-and-in-bash&#34;&gt;参考链接3&lt;/a&gt;)。例如&lt;code&gt;find / &amp;amp;&amp;gt; file&lt;/code&gt;等价于&lt;code&gt;find / &amp;gt;file 2&amp;gt;&amp;amp;1&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&#34;参考链接&#34;&gt;参考链接&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/24793069/what-does-do-in-bash/24793436#24793436&#34;&gt;What does &amp;amp;&amp;gt; do in bash? [duplicate]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tldp.org/LDP/abs/html/io-redirection.html&#34;&gt;I/O Redirection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://superuser.com/questions/335396/what-is-the-difference-between-and-in-bash&#34;&gt;What is the difference between &amp;amp;&amp;gt; and &amp;gt;&amp;amp; in bash?&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 【流水账】利用闲置笔记本搭建自己的开发服务器</title>
      <link>https://bwangel.me/docs/linux/laptop-server/</link>
      <pubDate>Mon, 27 Mar 2017 16:41:36 +0000</pubDate>
      
      <guid>https://bwangel.me/docs/linux/laptop-server/</guid>
      <description>
        
        
        &lt;ol&gt;
&lt;li&gt;对Ubuntu服务器进行基础配置&lt;/li&gt;
&lt;li&gt;配置dnsmasq服务器&lt;/li&gt;
&lt;li&gt;文章没什么技术含量，主要记录一些配置文件的位置&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近新入手了一台MacBook Air，原来的ThinkPad就闲置下来了，感觉一直放着太浪费了，就重装了一个Ubuntu Server 16.04的系统，用来做自己的开发服务器。折腾了几个小时，就都搞定了，特意写下这篇文章，来记录一下自己折腾的过程。&lt;/p&gt;
&lt;h2 id=&#34;基础配置&#34;&gt;基础配置&lt;/h2&gt;
&lt;p&gt;服务器安装的过程就不说了，大都是那么几步。有一个奇怪的问题就是安装的时候，需要设置时区，我竟然没有找到东八区，只好先设置了一个太平洋时区，好尴尬，不知道是不是Ubuntu的文本安装界面没有东八区这个选项，还是我英文太差了，没有找到。&lt;/p&gt;
&lt;h3 id=&#34;设置时间&#34;&gt;设置时间&lt;/h3&gt;
&lt;p&gt;由于安装时我们设置了错误的时区，所以首先需要调整一下时区。Ubuntu 16.04已经完全集成了Systemd，所以我们只需要通过&lt;code&gt;sudo timedatectl set-timezone Asia/Shanghai&lt;/code&gt;命令，就可以将时区设置为亚洲/上海了，同时我们也可以运行&lt;code&gt;sudo timedatectl set-ntp 1&lt;/code&gt;命令，打开自动从 NTP 服务器同步时间，一会之后服务器时间就正常了。&lt;code&gt;timedatectl&lt;/code&gt;命令还有一个选项是&lt;code&gt;set-local-rtc&lt;/code&gt;，用来将硬件时间设置为本地时间，而不是UTC时间，这个选项我默认是关闭的。&lt;/p&gt;
&lt;h3 id=&#34;更改软件源为中科大源&#34;&gt;更改软件源为中科大源&lt;/h3&gt;
&lt;p&gt;接下来，就是更改源了，打开&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;文件，将所有的&lt;code&gt;us.archive.ubuntu.com&lt;/code&gt;替换成&lt;code&gt;mirrors.ustc.edu.cn&lt;/code&gt;就可以了，注意这里由于我安装的时候选择的是美国的源，所以域名为&lt;code&gt;us.archive.ubuntu.com&lt;/code&gt;，如果选择了其他地方的源，域名可能不一样。&lt;/p&gt;
&lt;p&gt;同时要注意，&lt;code&gt;security.ubuntu.com&lt;/code&gt;这个源表示的是 Ubuntu 进行安全更新的源，用来推送紧急安全更新的补丁，这个源我建议保持原样，因为紧急安全更新的补丁还是从 Ubuntu 官方下载比较好，不建议从其他地方来下载。&lt;/p&gt;
&lt;h3 id=&#34;设置关闭盖子不休眠&#34;&gt;设置关闭盖子不休眠&lt;/h3&gt;
&lt;p&gt;由于我的电脑是笔记本，尽管没有装图形界面，但是在合上盖子之后，系统仍然会自动休眠，所以需要将这个自动休眠的功能关掉。我在网上搜索了一下，在 Askubuntu 上找到了一个相关的&lt;a href=&#34;http://askubuntu.com/questions/141866/keep-ubuntu-server-running-on-a-laptop-with-the-lid-closed&#34;&gt;问题&lt;/a&gt;，按照问题中的答案所说，向&lt;code&gt;/etc/systemd/logind.conf&lt;/code&gt;文件中添加一行&lt;code&gt;HandleLidSwitch=ignore&lt;/code&gt;，然后重启&lt;code&gt;systemd-logind.service&lt;/code&gt;服务，就关闭掉这个功能啦。&lt;/p&gt;
&lt;h2 id=&#34;配置网络环境&#34;&gt;配置网络环境&lt;/h2&gt;
&lt;p&gt;将服务器配置好以后，接下来我们就需要配置网络了。&lt;/p&gt;
&lt;h3 id=&#34;设置dhcp&#34;&gt;设置DHCP&lt;/h3&gt;
&lt;p&gt;我的笔记本是通过网线连接到路由器上的，所以，首先我们需要将有线网卡通过 DHCP 自动连接网络的功能打开。这里我在网上搜索了一下，搜到了一篇文章：&lt;a href=&#34;http://www.ubuntugeek.com/ubuntu-networking-configuration-using-command-line.html&#34;&gt;Ubuntu Networking Configuration Using Command Line &lt;/a&gt;。这篇文章很详细地介绍了Ubuntu如何设置动态IP和静态IP。我的电脑在刚装好系统的时候，没有任何关于有线网卡的配置文件，仅能够通过&lt;code&gt;ip addr&lt;/code&gt;命令来看到当前系统的网卡，在了解到有线网卡的名称为&lt;code&gt;enp12s0&lt;/code&gt;之后，我新建了一个文件&lt;code&gt;/etc/network/interfaces.d/enp12s0.conf&lt;/code&gt;，然后向其中添加了如下的内容，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 设置网卡enp12s0在开机的时候通过 DHCP 自动连接到网络。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;auto enp12s0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iface enp12s0 inet dhcp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面两句配置就表示设置网卡enp12s0在开机的时候通过 DHCP 自动连接到网络。&lt;/p&gt;
&lt;h3 id=&#34;设置默认网关&#34;&gt;设置默认网关&lt;/h3&gt;
&lt;p&gt;设置好网卡的 DHCP 以后，我的服务器能够 ping 通路由器网关了，但是仍然无法 ping 通外网，显然，这是由于服务器本机的网关没有配置好，后来我又上网去搜索，发现了&lt;a href=&#34;http://askubuntu.com/questions/522420/how-to-get-default-gateway-with-a-dhcp&#34;&gt;Askubuntu 上一个类似的问题&lt;/a&gt;，其中有个答案提到，&lt;code&gt;dhclient&lt;/code&gt;只在当前服务器没有设置默认网关的时候，才会设置由 DHCP 服务器提供的路由器地址为默认网关。我通过&lt;code&gt;ip route&lt;/code&gt;看了一下我的服务器的路由表，发现默认网关为网卡&lt;code&gt;lo&lt;/code&gt;，所以 DHCP 服务器下发下来的网关地址并不会生效。我又在&lt;code&gt;/etc/network/interfaces&lt;/code&gt;中添加了如下的配置：&lt;code&gt;post-up route del default dev lo&lt;/code&gt;，删除掉默认走&lt;code&gt;lo&lt;/code&gt;设备的路由配置。&lt;/p&gt;
&lt;p&gt;然后我再来重启电脑，就发现服务器一开机就能够正常 ping 通外网了。&lt;/p&gt;
&lt;h3 id=&#34;设置路由器&#34;&gt;设置路由器&lt;/h3&gt;
&lt;p&gt;看到这里，相信大家肯定都有一些疑惑，服务器不应该是默认设置为静态IP吗，为什么你要配置 DHCP 呢。原因就在这一小节，我用的路由器是华硕的RT - N12，它的 DHCP 服务器有一个功能，就是将MAC地址和IP地址进行绑定，所以，我只需要在路由器上配置好MAC地址和IP地址的绑定，这样就相当于起到了静态IP的作用了，而且更改起来也比较方便，不需要服务器和路由器两头改。&lt;/p&gt;
&lt;h2 id=&#34;配置dns&#34;&gt;配置DNS&lt;/h2&gt;
&lt;p&gt;由于我访问我的服务器的时候想通过域名来访问(方便以后添加HTTPS证书)，所以我需要在我的内网中自己搭建一个DNS服务器，来负责服务器的域名解析。&lt;/p&gt;
&lt;h3 id=&#34;安装并设置dnsmasq&#34;&gt;安装并设置dnsmasq&lt;/h3&gt;
&lt;p&gt;由于我的需求很简单，只需要进行一个域名解析就可以了，所以我选择了&lt;a href=&#34;http://www.thekelleys.org.uk/dnsmasq/docs/dnsmasq-man.html&#34;&gt;dnsmasq&lt;/a&gt;，而不是比较复杂的bind9。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dnsmasq&lt;/code&gt;在Ubuntu的源中直接有deb安装包，所以我们直接通过&lt;code&gt;sudo apt install dnsmasq&lt;/code&gt;命令安装即可。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dnsmasq&lt;/code&gt;的配置我参考了文章&lt;a href=&#34;http://cjting.me/misc/2016-08-20-%E4%BD%BF%E7%94%A8Dnsmasq%E6%90%AD%E5%BB%BA%E5%86%85%E7%BD%91DNS%E6%9C%8D%E5%8A%A1%E5%99%A8.html&#34;&gt;使用Dnsmasq搭建内网DNS服务器&lt;/a&gt;。使用了如下的配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 设置服务器的监听地址为192.168.X.X和127.0.0.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;listen-address&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;192.168.X.X,127.0.0.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 所有没有.号的域名(plain names)都不会向上游DNS Server转发，只查询hosts文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;domain-needed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 所有保留IP地址段内的反向查询都不会向上游DNS Server转发，只查询hosts文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bogus-priv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 不要读取/etc/resolver中的DNS Server的配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;no-resolv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 不要poll /etc/resolver文件的更新&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;no-poll
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 配置上游服务器为DNSPod的公共DNS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;server&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;119.29.29.29
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;server&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;182.254.116.116
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;配置好了以后，我们可以通过&lt;code&gt;dnsmasq --test&lt;/code&gt;命令来检查&lt;code&gt;dnsmasq&lt;/code&gt;的配置文件语法是否正确。&lt;/p&gt;
&lt;p&gt;然后我们在服务器的&lt;code&gt;/etc/hosts&lt;/code&gt;中添加我们想要设置的解析记录，比如这台服务器我设置了如下的记录：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;192.168.X.X dev.bwangel.me
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后通过&lt;code&gt;sudo systemctl enable dnsmasq &amp;amp;&amp;amp; sudo systemctl restart dnsmasq&lt;/code&gt;命令启动&lt;code&gt;dnsmasq&lt;/code&gt;服务即可。&lt;/p&gt;
&lt;p&gt;最后我们可以通过&lt;code&gt;dig&lt;/code&gt;命令测试一下，运行如下命令: &lt;code&gt;dig dev.bwangel.me @localhost&lt;/code&gt;，看返回的IP地址是否和我们设置的解析记录相同。&lt;/p&gt;
&lt;h3 id=&#34;设置路由器-1&#34;&gt;设置路由器&lt;/h3&gt;
&lt;p&gt;配置好了DNS服务器以后，我们再来修改路由器的 DHCP 策略，设置下发的DNS服务器IP地址为我们的DNS服务器地址，这样内网中所有的DNS查询都会先经过这台DNS服务器。而我们的&lt;code&gt;dev.bwangel.me&lt;/code&gt;域名也就能够成功解析了。至此，我们的开发服务器就已经搭建好了，我们可以通过SSH连接上来，搭建我们想要的服务了。&lt;/p&gt;
&lt;h2 id=&#34;遇到的一些小坑&#34;&gt;遇到的一些小坑&lt;/h2&gt;
&lt;h3 id=&#34;dnsmasq没有绑定本地地址&#34;&gt;dnsmasq没有绑定本地地址&lt;/h3&gt;
&lt;p&gt;配置好了 DNS 服务器以后，我在服务器上 ping 百度的时候会一直卡着，但是 ping 公网 IP 却是可以 ping 通的，当时我第一反应就是DNS解析出错了，只是不知道是DNS服务器配置的有问题，还是DNS服务器的IP地址路由器没有正确地下发下来。&lt;/p&gt;
&lt;p&gt;接着我就利用dig来测试，发现使用&lt;code&gt;dig www.baidu.com @192.168.X.X&lt;/code&gt;命令可以得到正常结果，而&lt;code&gt;dig www.baidu.com @127.0.0.1&lt;/code&gt;就会卡着。然后我就觉得应该是dnsmasq没有监听&lt;code&gt;127.0.0.1&lt;/code&gt;导致的问题。最后发现服务器DNS的配置文件&lt;code&gt;/etc/resolv.conf&lt;/code&gt;中设置的默认DNS为&lt;code&gt;127.0.0.1&lt;/code&gt;，而它去查询&lt;code&gt;127.0.0.1&lt;/code&gt;的时候会卡着，也不报错，导致服务器不会使用备选的DNS服务器来查询域名，最终导致出现了 ping 百度卡着这种情况。我将dnsmasq的监听地址加上&lt;code&gt;127.0.0.1&lt;/code&gt;之后就OK了。&lt;/p&gt;
&lt;p&gt;这里还有一点没有搞清楚，路由器的 DHCP 中配置的DNS服务器并没有正确地应用，服务器还是默认遵循&lt;code&gt;/etc/resolv.conf&lt;/code&gt;文件中的配置，这个还需要进一步了解一下。&lt;/p&gt;
&lt;h3 id=&#34;ssh出现locale报错&#34;&gt;ssh出现locale报错&lt;/h3&gt;
&lt;p&gt;这个问题经常遇到了，在Mac上通过SSH连接到Ubuntu上之后，在安装更新的过程中，出现了如下的报错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;perl: warning: Setting locale failed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;perl: warning: Please check that your locale settings:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;LANGUAGE&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;unset&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;LC_ALL&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;unset&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;LC_MESSAGES&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;zh_CN.UTF-8&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;LANG&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;zh_CN.UTF-8&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    are supported and installed on your system.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;perl: warning: Falling back to the standard locale &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;C&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这是由于终端SSH的时候，会将本地的locale配置传到服务端上去，我的本地设置的语系是&lt;code&gt;zh_CN.UTF-8&lt;/code&gt;，但是服务器上只安装了&lt;code&gt;en_US.UTF-8&lt;/code&gt;，所以就会报错提示说找不到语系&lt;code&gt;zh_CN.UTF-8&lt;/code&gt;相关的文件。这里我们只需要修改一下服务器的&lt;code&gt;/etc/locale.gen&lt;/code&gt;配置文件，将&lt;code&gt;zh_CN.UTF-8&lt;/code&gt;相关的配置取消注释，然后再来运行&lt;code&gt;locale-gen&lt;/code&gt;命令，就会安装上&lt;code&gt;zh_CN.UTF-8&lt;/code&gt;语系相关的文件了，再来运行&lt;code&gt;perl&lt;/code&gt;程序就不会报错了。&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 【非技术】 Arch 下的无线自动断开</title>
      <link>https://bwangel.me/docs/linux/arch-wireless-adapter/</link>
      <pubDate>Sun, 18 Dec 2016 14:13:44 +0000</pubDate>
      
      <guid>https://bwangel.me/docs/linux/arch-wireless-adapter/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;折腾 ThinkPad E430 在 Arch WiFi 自动断开的问题&lt;/li&gt;
&lt;li&gt;无线网卡型号推荐&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;问题描述&#34;&gt;问题描述&lt;/h2&gt;
&lt;p&gt;首先说明，这个问题我最终还是没有解决，最后的办法就是去上网买了一块无线网卡，所以我在标题上写上非技术的字样，表明这篇文章技术含量并不大。&lt;/p&gt;
&lt;p&gt;先说我的硬件环境吧，电脑是 ThinkPad E430，无线网卡的芯片型号是瑞昱的RTL8188CE，系统内核版本是4.8.13。&lt;/p&gt;
&lt;p&gt;出现的问题就是无线连上一段时间以后，网络会自动断开，ping 不通任何网站。而系统却还显示网络已经连接，&lt;code&gt;ip address&lt;/code&gt; 命令也能够看到无线网卡的IP地址。&lt;/p&gt;
&lt;h2 id=&#34;尝试的解决方案&#34;&gt;尝试的解决方案&lt;/h2&gt;
&lt;h3 id=&#34;方案1更改etcpppoptions配置文件&#34;&gt;方案1：更改&lt;code&gt;/etc/ppp/options&lt;/code&gt;配置文件&lt;/h3&gt;
&lt;p&gt;遇到问题当然要先谷歌啦，首先我以&lt;code&gt;arch wifi auto disconnect&lt;/code&gt;关键字来搜索，结果搜到了很多相关度不大的页面，后来又以&lt;code&gt;thinkpad e430 wifi auto disconnect&lt;/code&gt;关键字来搜索，就搜索到了&lt;a href=&#34;https://www.oschina.net/question/571626_234750&#34;&gt;开源中国社区上的一个问题&lt;/a&gt;，额，前两个回答看起来还是让人很不爽的，不禁让我想起来教主的这条&lt;a href=&#34;http://weibo.com/1401527553/EirySEJV9?type=comment&#34;&gt;微博&lt;/a&gt;，然后果断举报了。&lt;/p&gt;
&lt;p&gt;接着我在下面看到有人回答说可以更改&lt;code&gt;/etc/ppp/options&lt;/code&gt;文件中的一个配置项，我就照着去更改了，重启后发现该 WiFi 依旧抽风，方案1失败。&lt;/p&gt;
&lt;h3 id=&#34;方案2更改rtl8192ce内核模块的选项&#34;&gt;方案2：更改&lt;code&gt;rtl8192ce&lt;/code&gt;内核模块的选项&lt;/h3&gt;
&lt;p&gt;后来我一想，是不是因为我的搜索关键字范围太广了，就把关键字搞得更精确一点。我就去以&lt;code&gt;RTL8188CE linux disconnect&lt;/code&gt;和&lt;code&gt;RTL8188CE linux disconnect&lt;/code&gt;着两个关键字去搜索，果然一下子发现了有价值的内容。&lt;/p&gt;
&lt;p&gt;首先找到了是这个帖子：&lt;a href=&#34;https://forums.linuxmint.com/viewtopic.php?t=194086&#34;&gt;【SOLVED】 wifi connection problems Realtek RTL8188CE&lt;/a&gt;。发现这个帖子的时候，我感觉特别兴奋的，因为这位网友描述的问题，和我的几乎一模一样，它的网卡型号也和我的一模一样。
然后照着下面的回复，给&lt;code&gt;rtl8192ce&lt;/code&gt;模块添加了&lt;code&gt;fwlps=0 ips=0&lt;/code&gt;这两个参数，重启后发现依然跪，好吧，真是大坑。后来又去尝试编译这篇帖子中提到了&lt;code&gt;backports-20150313.tar.xz&lt;/code&gt;程序，直接出现了语法错误，好吧，果断放弃了。&lt;/p&gt;
&lt;p&gt;后来有搜索到了Arch论坛上有人讨论相关的问题，然后我就照着论坛里面人们的讨论，稀里糊涂地发现了 ThinkPad E430 在 Arch 上的 &lt;a href=&#34;https://wiki.archlinux.org/index.php/Lenovo_ThinkPad_Edge_E430#Wireless&#34;&gt;Wiki页面&lt;/a&gt;。Wiki 中就提到了无线网络的问题，然后它给出的答案也是更改&lt;code&gt;RTL8188CE&lt;/code&gt;这个内核模块的参数，不过是只需要添加一个&lt;code&gt;fwlps=0&lt;/code&gt;就好了，如果不行的话，直接去买一块 Intel Centrino wlan/bluetooth 4.0 卡吧。
我照着这个方案试了一下，果断不行，WiFi 依然跪，方案2也失败了。&lt;/p&gt;
&lt;h3 id=&#34;方案3求助于-archlinux-的邮件列表&#34;&gt;方案3：求助于 ArchLinux 的邮件列表&lt;/h3&gt;
&lt;p&gt;到此时，我已经感觉到山穷水尽了，好像真的没有办法了，于是乎就去 ArchLinux 邮件列表上发了一个&lt;a href=&#34;https://groups.google.com/forum/#!topic/archlinux-cn/UgGVBn99UOs&#34;&gt;求助帖&lt;/a&gt;：一方面想看看还能不能找到解决办法，另一方面想请教一下如果要再买一个无线网卡的话，该买什么型号的？&lt;/p&gt;
&lt;h2 id=&#34;原因分析&#34;&gt;原因分析&lt;/h2&gt;
&lt;p&gt;最后，在邮件列表中，大家分析过后，认为很有可能网卡驱动有问题。&lt;/p&gt;
&lt;p&gt;因为在网络实际上已经断开的情况下，内核依然没有收到网络断开的消息，依然认为网络是连接着的。这种情况下可能的原因是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内核有 BUG 导致驱动报告的事件没有反应到其他部分。&lt;/li&gt;
&lt;li&gt;驱动有 BUG 没有正确地将网络断开事件报告给内核。&lt;/li&gt;
&lt;li&gt;驱动有 BUG 在网络已经断开的情况下没有报告网络已经断开这个事件。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;而一般看来，驱动是故障的高发区。&lt;/p&gt;
&lt;p&gt;后来我又用 Wireshark 抓了一下包，发现当WiFI自动断开后，有大量的 ARP 请求，此时应该就是因为驱动有问题导致网卡罢工了，内核让它发的包发布出去，它也接受不到任何的包。&lt;/p&gt;
&lt;h2 id=&#34;网卡推荐&#34;&gt;网卡推荐&lt;/h2&gt;
&lt;p&gt;至此，看来这个驱动问题我是没法解决了，只好去重新买一块无线网卡，为了一个操作系统花上几十块钱买块网卡，虽说听起来很2，但是自己觉得还是很划算的。&lt;/p&gt;
&lt;p&gt;目前无线网卡的芯片主要有这么几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ralink(雷凌，台湾)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Ralink Technology公司成立于2001年，总部位于台湾新竹，并在美国加州Cupertino设有研发中心。目前已知的Edimax、Tenda、ASUS及D-link都有采用Ralink的产品。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;oroadcomd(博通，美国)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Broadcom芯片是最成熟、最稳定的一种，而且还可以使用DD-WRT这种第三方开源固件改善性能，增加功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Atheros(创锐讯，美国)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Atheros 在1999年由斯坦福大学的Teresa Meng博士和斯坦福大学校长，MIPS创始人John Hennessy博士共同在硅谷创办。Atheros的芯片被各大厂商所广泛采用，Netgear、D-Link、Intel等厂商均为Atheros客户。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Realtek(瑞昱，台湾)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;瑞昱半导体于1987年在台湾的新竹科学园区成立，我的电脑的无线网卡芯片就是这个牌子的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;总的来说，无论是抓包，开热点还是兼容性(不仅针对 Linux)，Atheros 的 AR9271 都是比较合适的。据同事说，使用下来最稳定的 USB 网卡就是网件的 WNA1100，某宝上二手的洋垃圾也就十几块钱。&lt;/p&gt;
&lt;h2 id=&#34;写在最后&#34;&gt;写在最后&lt;/h2&gt;
&lt;p&gt;最终我还是去某宝上买了一块 USB 无线网卡。再此，要感谢邮件列表中的热心群众，感谢他们能够帮我解决问题和推荐网卡，我从中也学到了很多。&lt;/p&gt;
&lt;p&gt;最后附上我在解决问题的过程中参考到的页面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.oschina.net/question/571626_234750&#34;&gt;ubuntu14.04 wifi频繁掉线&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forums.linuxmint.com/viewtopic.php?t=194086&#34;&gt;【SOLVED】wifi connection problems Realtek RTL8188CE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Lenovo_ThinkPad_Edge_E430#Wireless&#34;&gt;Lenovo ThinkPad Edge E430 - Arch Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://item.taobao.com/item.htm?spm=a230r.1.14.62.DbhWkt&amp;amp;id=538494346626&amp;amp;ns=1&amp;amp;abbucket=19#detail&#34;&gt;没错，你没有看错，这是一个淘宝页面，我参考了它的宝贝详情&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!topic/archlinux-cn/UgGVBn99UOs&#34;&gt;ArchLinux 的邮件列表&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: More advanced if usage</title>
      <link>https://bwangel.me/docs/linux/more-advanced-if-usage/</link>
      <pubDate>Mon, 03 Oct 2016 09:52:51 +0000</pubDate>
      
      <guid>https://bwangel.me/docs/linux/more-advanced-if-usage/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;本文是对&lt;a href=&#34;http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_07_02.html&#34;&gt;More advanced if usage&lt;/a&gt;的翻译&lt;/li&gt;
&lt;li&gt;主要讲述了 Bash 中 if 的一些高级用法&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;ifthenelse-结构体&#34;&gt;if/then/else 结构体&lt;/h2&gt;
&lt;h3 id=&#34;虚构的例子&#34;&gt;虚构的例子&lt;/h3&gt;
&lt;p&gt;这是一个结构体，在 if 运行结果为真的时候执行一个动作过程，如果 if 运行结果为假则执行另外一个动作过程。下面是一个例子:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;freddy scripts&amp;gt; &lt;span style=&#34;color:#000&#34;&gt;gender&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;male&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;freddy scripts&amp;gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$gender&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;f*&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;More input&amp;gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Pleasure to meet you, Madame.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;More input&amp;gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;How come the lady hasn&amp;#39;t got a drink yet?&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;More input&amp;gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;How come the lady hasn&lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;t got a drink yet?
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;freddy scripts&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;:
和 &lt;em&gt;[&lt;/em&gt; 相反，&lt;em&gt;[[&lt;/em&gt; 阻止变量值的单词分割。所以，如果&lt;code&gt;VAR=&amp;quot;var with spaces&amp;quot;&lt;/code&gt;，你不需要在 test 的过程中在&lt;code&gt;$VAR&lt;/code&gt;周围使用双引号 - 即使使用引号仍然是一个好习惯。 &lt;em&gt;[[&lt;/em&gt; 阻止了文件路径名的扩展，所以如果一个文件字符串中含有通配符的话，它不会去扩展成文件名。使用*[[&lt;em&gt;，&lt;/em&gt;==* 和 &lt;em&gt;!=&lt;/em&gt; 会将右边的值解释为 shell 的 &lt;a href=&#34;http://tldp.org/LDP/GNU-Linux-Tools-Summary/html/x11655.htm&#34;&gt;glob&lt;/a&gt; 模式，而不是左边的值。例如：&lt;code&gt;[[ &amp;quot;value&amp;quot; == val* ]]&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;就像下面 then 语句块中列出的连续命令列表一样，else 语句块中可替换的连续命令列表能够拥有任何 Unix 风格的命令来返回一个退出状态。&lt;/p&gt;
&lt;p&gt;另一个例子，从 &lt;a href=&#34;http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_07_01.html#sect_07_01_02_01&#34;&gt; Section 7.1.2.1&lt;/a&gt; 扩展而来：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;anny ~&amp;gt; su -
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Password:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;root@elegance root&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# if ! grep ^$USER /etc/passwd 1&amp;gt; /dev/null&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;your user account is not managed locally&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;your account is managed from the local /etc/passwd file&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;your account is managed from the &lt;span style=&#34;color:#204a87&#34;&gt;local&lt;/span&gt; /etc/passwd file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;root@elegance root&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们切换到 root 账户去演示 else 语句的效果 - 你的 root 通常是一个本地账户，而你自己的账户可能通过一个中央系统来管理，就比如一个 LDAP 服务器。&lt;/p&gt;
      </description>
    </item>
    
  </channel>
</rss>
