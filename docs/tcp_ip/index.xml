<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>647 Universe – TCP/IP</title>
    <link>https://bwangel.me/docs/tcp_ip/</link>
    <description>Recent content in TCP/IP on 647 Universe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    <lastBuildDate>Fri, 29 Sep 2023 10:55:30 +0800</lastBuildDate>
    
	  <atom:link href="https://bwangel.me/docs/tcp_ip/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 混杂模式</title>
      <link>https://bwangel.me/docs/tcp_ip/promisc/</link>
      <pubDate>Fri, 12 Nov 2021 23:36:02 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/tcp_ip/promisc/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;定义&#34;&gt;定义&lt;/h2&gt;
&lt;p&gt;混杂模式是指一个网卡会把它接收的所有网络流量都交给 CPU，而不是只把它想转交的部分交给 CPU。&lt;/p&gt;
&lt;p&gt;在 IEEE 802 定的网络规范中，每个网络帧都有一个目的 MAC 地址。在非混杂模式下，网卡只会接收目的地址是它自己的单播帧，以及多播及广播帧；在混杂模式下，网卡会接收经过它的所有帧。&lt;/p&gt;
&lt;h2 id=&#34;查看&#34;&gt;查看&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;netstat -i&lt;/code&gt; 和 &lt;code&gt;ifconfig&lt;/code&gt; 可以查看网卡的状态&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ø&amp;gt; sudo netstat -i
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Kernel Interface table
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Iface      MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;br-7fd48  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1500&lt;/span&gt;        &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;             &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; BMU
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;br-bade7  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1500&lt;/span&gt;        &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;             &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; BMU
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker0   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1500&lt;/span&gt;        &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;             &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; BMU
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;enp0s3    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1500&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;999&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;           &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;692&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; BMRU
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# P 表示网卡 enp0s8 开启了混杂模式 promisc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;enp0s8    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1500&lt;/span&gt;        &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;            &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;17&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; BMPRU
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lo       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;65536&lt;/span&gt;        &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;             &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; LRU
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ø&amp;gt; ifconfig enp0s8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# PROMISC 表示 enp0s8 开启了混杂模式&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;enp0s8: &lt;span style=&#34;color:#000&#34;&gt;flags&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;4419&amp;lt;UP,BROADCAST,RUNNING,PROMISC,MULTICAST&amp;gt;  mtu &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1500&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        inet 192.168.56.23  netmask 255.255.255.0  broadcast 192.168.56.255
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        inet6 fe80::a00:27ff:fedd:4aec  prefixlen &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;64&lt;/span&gt;  scopeid 0x20&amp;lt;link&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ether 08:00:27:dd:4a:ec  txqueuelen &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1000&lt;/span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;Ethernet&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        RX packets &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;  bytes &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;86&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;86.0 B&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        RX errors &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;  dropped &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;  overruns &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;  frame &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        TX packets &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;17&lt;/span&gt;  bytes &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1326&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;1.3 KB&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        TX errors &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;  dropped &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; overruns &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;  carrier &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;  collisions &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;设置&#34;&gt;设置&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sudo ifconfig enp0s8 promisc&lt;/code&gt; 可以让网卡进入混杂模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sudo ifconfig enp0s8 -promisc&lt;/code&gt; 可以让网卡退出混杂模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;veth 设备加入 Linux Bridge 后，会自动进入混杂模式，且无法退出。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网络设备离开 Linux Bridge 后，会自动退出混杂模式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/34855927/&#34;&gt;《Kubernetes 网络权威指南》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: TCP Naggle 算法</title>
      <link>https://bwangel.me/docs/tcp_ip/tcp-naggle/</link>
      <pubDate>Mon, 18 Oct 2021 23:54:13 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/tcp_ip/tcp-naggle/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;tips&#34;&gt;Tips&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if 有数据要发送 {
    if 可用窗口大小 &amp;gt;= MSS and 可发送的数据 &amp;gt;= MSS {
        立刻发送MSS大小的数据
    } else {
        if 有未确认的数据 {
            将数据放入缓存等待接收ACK
        } else {
            立刻发送数据
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/article/1784570&#34;&gt;深入浅出TCPIP之Nagle算法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: TCP/IP 读书笔记</title>
      <link>https://bwangel.me/docs/tcp_ip/tcp-ip-notes/</link>
      <pubDate>Mon, 28 Aug 2017 23:50:38 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/tcp_ip/tcp-ip-notes/</guid>
      <description>
        
        
        &lt;p&gt;本文是本人在阅读《TCP/IP 详解：卷一》时所做的一些笔记，记录一些我认为比较重要的知识点或者句子，较为凌乱，仅为本人参考使用，并非是分享知识的博客文章。&lt;/p&gt;
&lt;h2 id=&#34;第19章-tcp-的交互数据流&#34;&gt;第19章 TCP 的交互数据流&lt;/h2&gt;
&lt;h3 id=&#34;经受时延&#34;&gt;经受时延&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;通常 TCP 在收到数据后并不立即进行确认，而是推迟发送 ACK 确认，以便与同一方向上的数据一起发送。有时也称这种现象为数据捎带 ACK。&lt;/li&gt;
&lt;li&gt;绝大多数实现采用的时延为200ms，即操作系统每200毫秒滴答一次，在滴答的时候 TCP 检测是否有 ACK 需要发送，如果有则发送。&lt;/li&gt;
&lt;li&gt;当一个数据包到达并被处理后，系统产生经受时延标记，ACK 暂不发送。当经受时延计时器超时后，ACK 被发送，并且系统的经受时延标记被清除。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;nagle-算法&#34;&gt;Nagle 算法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在一个 TCP 连接上只能有一个未被确认的未完成的小分组，在该分组的确认到达之前不能发送任何小分组。&lt;/li&gt;
&lt;li&gt;TCP 连接将会收集这些小分组，在确认到达时以一个分组发送出去。&lt;/li&gt;
&lt;li&gt;TCP 接口可以通过&lt;code&gt;TCP_NODELAY&lt;/code&gt;选项关闭 Nagle 算法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;其他&#34;&gt;其他&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;每当 TCP 接收到一个超出期望序号的失序数据时，它总是发送一个确认序号为其期望序号的确认。&lt;/li&gt;
&lt;li&gt;TCP 可以在应用读取并处理所有数据前，发送所接收数据的确认。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第20章-tcp的成块数据流&#34;&gt;第20章 TCP的成块数据流&lt;/h2&gt;
&lt;h3 id=&#34;滑动窗口&#34;&gt;滑动窗口&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;发送方滑动窗口的大小随着接收方接收缓冲区的大小变化而变化。&lt;/li&gt;
&lt;li&gt;FIN 的 ACK 可以携带数据，FIN 也可以携带数据。&lt;/li&gt;
&lt;li&gt;不确定数据，仅更新窗口右边缘的 ACK 称为窗口更新。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;窗口大小&#34;&gt;窗口大小&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;PUSH 标记
&lt;ul&gt;
&lt;li&gt;发送方通知接收方的 TCP 立即将接收到的数据发送给应用程序，这些数据包括 PSH 标记携带的数据和所有 TCP 为这个应用程序接收的数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;许多 TCP 实现在窗口大小增加了两个最大报文段长度，或者窗口大小增加到最大可能窗口的50%后，会向对端发送窗口更新报文。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;慢启动&#34;&gt;慢启动&lt;/h3&gt;
&lt;p&gt;发送方设置一个拥塞窗口(Congestion Window)cwnd。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;连接建立后 cwnd = 1， 表明可以传发送方网络链路一个 MSS 大小的数据。&lt;/li&gt;
&lt;li&gt;每收到一个 ACK，cwnd++&lt;/li&gt;
&lt;li&gt;每经过一个 RTT，cwnd = cwnd * 2&lt;/li&gt;
&lt;li&gt;当&lt;code&gt;cwnd &amp;gt;= ssthresh(slow start threshold)&lt;/code&gt;时，就会进入拥塞避免算法&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Linux 3.0以后根据 Google 一篇论文&lt;a href=&#34;http://static.googleusercontent.com/media/research.google.com/zh-CN//pubs/archive/36640.pdf&#34;&gt;《An Argument for Increasing TCP’s Initial CongestionWindow》&lt;/a&gt;的建议，将 cwnd 初始化为10个 MSS。在 Linux 3.0之前，比如2.6，Linux 则采用了 &lt;a href=&#34;http://www.rfc-editor.org/rfc/rfc3390.txt&#34;&gt;RFC3390&lt;/a&gt;，cwnd 是根据 MSS 的值变化的，变化方式如下所示：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if MSS &amp;lt; 1095 {
  cwnd = 4
} else if MSS &amp;gt; 2190 {
  cwnd = 2
} else {
  cwnd = 3
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;参考文章&#34;&gt;参考文章&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://coolshell.cn/articles/11609.html&#34;&gt;TCP 的那些事（下）&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
      </description>
    </item>
    
  </channel>
</rss>
