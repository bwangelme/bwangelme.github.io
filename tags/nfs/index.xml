<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nfs on 647 Universe</title>
    <link>https://bwangel.me/tags/nfs/</link>
    <description>Recent content in Nfs on 647 Universe</description>
    <generator>Hugo</generator>
    <language>cn</language>
    <lastBuildDate>Wed, 06 Sep 2023 09:33:57 +0800</lastBuildDate>
    <atom:link href="https://bwangel.me/tags/nfs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在 Ubuntu 22.04 上搭建 NFS Server</title>
      <link>https://bwangel.me/docs/linux/nfs-server/</link>
      <pubDate>Wed, 06 Sep 2023 08:51:39 +0800</pubDate>
      <guid>https://bwangel.me/docs/linux/nfs-server/</guid>
      <description>环境准备 我准备了两台机器&#xA;name ip user user_id server 191.168.58.11 vagrant 1000 client 192.168.58.1 xuyundong 1000 安装组件 服务端安装 nfs server sudo apt update sudo apt install nfs-kernel-server 客户端安装 nfs-common sudo apt update sudo apt install nfs-common 服务端创建目录并导出 在服务端上创建挂载目录，并设置权限 sudo mkdir -p /mnt/share sudo chown vagrant:vagrant /mnt/share sudo chmod 755 /mnt/share 服务端上配置 nfs export 目录 修改 /etc/exports 文件, 加入以下内容&#xA;/mnt/share *(rw,async,no_subtree_check) 关于 export 选项的解释&#xA;rw: 客户端具有读和写的权限 sync: 强制 nfs 在回复 client 之前将更改写入磁盘，这保证了 nfs server 的可靠性，但也降低了写入速度 no_subtree_check: 此选项可防止子树检查，在子树检查过程中，主机必须为每个请求检查文件在导出的树中是否仍然可用。当客户端打开文件时重命名文件时，这可能会导致许多问题。通常建议禁用子树检查。 no_root_squash: 当客户端以 root 权限写入文件时，nfs server 会将文件 owner 改成普通用户，当此选项开启时，nfs server 不修改 root 写入文件的 woner 修改完以后执行以下命令载入配置</description>
    </item>
  </channel>
</rss>
