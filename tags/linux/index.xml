<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on 647 Universe</title>
    <link>https://bwangel.me/tags/linux/</link>
    <description>Recent content in linux on 647 Universe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    <lastBuildDate>Tue, 19 Dec 2023 17:13:40 +0800</lastBuildDate><atom:link href="https://bwangel.me/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Makefile</title>
      <link>https://bwangel.me/docs/linux/makefile/</link>
      <pubDate>Tue, 19 Dec 2023 17:13:40 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/makefile/</guid>
      <description> ?= ?= 指示仅在未设置或没有值时设置 KDIR 变量。
# make test 将会输出 foo KDIR ?= &amp;#34;foo&amp;#34; KDIR ?= &amp;#34;bar&amp;#34; test: echo $(KDIR) </description>
    </item>
    
    <item>
      <title>DNS</title>
      <link>https://bwangel.me/docs/linux/dns/</link>
      <pubDate>Sat, 09 Sep 2023 13:41:16 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/dns/</guid>
      <description>A 记录 Address Mapping records, 指示了对应名称的IPv4地址, A记录用来将域名转换为ip地址.
AAAA 记录 类似于A记录, 只不过指示的是IPv6的地址。
因为 IPv6 地址长度是 IPv4 的四倍，所以用 AAAA 表示 IPv6 记录
NS 记录 Name Server records, 用来指定对应名称的可信名称服务器 (authoritative name server) 例如这段 dig 日志是 j.gtld-servers.net 告诉我们，它不知道 www.baidu.com 的 IP, 但是它告诉我们要查询 baidu.com. 域的地址，可以去 ns[12345].baidu.com 这5个地址中查。
baidu.com. 172800 IN NS ns2.baidu.com. baidu.com. 172800 IN NS ns3.baidu.com. baidu.com. 172800 IN NS ns4.baidu.com. baidu.com. 172800 IN NS ns1.baidu.com. baidu.com. 172800 IN NS ns7.baidu.com. ;; Received 849 bytes from 192.</description>
    </item>
    
    <item>
      <title>在 Ubuntu 22.04 上搭建 NFS Server</title>
      <link>https://bwangel.me/docs/linux/nfs-server/</link>
      <pubDate>Wed, 06 Sep 2023 08:51:39 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/nfs-server/</guid>
      <description>环境准备 我准备了两台机器
name ip user user_id server 191.168.58.11 vagrant 1000 client 192.168.58.1 xuyundong 1000 安装组件 服务端安装 nfs server sudo apt update sudo apt install nfs-kernel-server 客户端安装 nfs-common sudo apt update sudo apt install nfs-common 服务端创建目录并导出 在服务端上创建挂载目录，并设置权限 sudo mkdir -p /mnt/share sudo chown vagrant:vagrant /mnt/share sudo chmod 755 /mnt/share 服务端上配置 nfs export 目录 修改 /etc/exports 文件, 加入以下内容
/mnt/share *(rw,async,no_subtree_check) 关于 export 选项的解释
rw: 客户端具有读和写的权限 sync: 强制 nfs 在回复 client 之前将更改写入磁盘，这保证了 nfs server 的可靠性，但也降低了写入速度 no_subtree_check: 此选项可防止子树检查，在子树检查过程中，主机必须为每个请求检查文件在导出的树中是否仍然可用。当客户端打开文件时重命名文件时，这可能会导致许多问题。通常建议禁用子树检查。 no_root_squash: 当客户端以 root 权限写入文件时，nfs server 会将文件 owner 改成普通用户，当此选项开启时，nfs server 不修改 root 写入文件的 woner 修改完以后执行以下命令载入配置</description>
    </item>
    
    <item>
      <title>lsof</title>
      <link>https://bwangel.me/docs/linux/lsof/</link>
      <pubDate>Thu, 02 Mar 2023 12:43:09 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/lsof/</guid>
      <description>按照网络状态筛选进程的 fd sudo lsof -i -sTCP:LISTEN -a -p &amp;lt;pid&amp;gt; -a 表示 and, 前后两个条件要一起生效
-i 和 -s 一起用，表示可以按照 TCP/UDP 状态来筛选 fd
列出进程 &amp;lt;pid&amp;gt; 建立的所有 TCP 连接
sudo lsof -i -sTCP:ESTABLISHED -a -p &amp;lt;pid&amp;gt; 列出进程 &amp;lt;pid&amp;gt; 所有 IDLE 状态的 UDP 连接 sudo lsof -i -sUDP:IDLE -a -p &amp;lt;pid&amp;gt; 根据 Unix 发行版本的不同，TCP/UDP 状态也会有不同的名字:
常用的 TCP 状态是: CLOSED, IDLE, BOUND, LISTEN, ESTABLISHED, SYN_SENT, SYN_RCDV, ESTABLISHED, CLOSE_WAIT, FIN_WAIT1, CLOSING, LAST_ACK, FIN_WAIT_2, TIME_WAIT. 常用的 UDP 状态是: Unbound, Idle 按照 fd number 查找进程的 fd 使用 strace 查看进程的系统调用的时候，经常能够看到在某个 fd 上执行读写操作，例如:</description>
    </item>
    
    <item>
      <title>ls Tips</title>
      <link>https://bwangel.me/docs/linux/ls-tips.md/</link>
      <pubDate>Tue, 16 Aug 2022 23:10:06 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/ls-tips.md/</guid>
      <description>ls 按照修改时间排序 -t 按照修改时间排序 -r 逆序排序 xuyundong@Macmini:~/Github/blog$ ls -lt content/tips/ -rw-rw-r-- 1 xuyundong xuyundong 800 8月 16 23:13 ls-tips.md.md -rw-rw-r-- 1 xuyundong xuyundong 2644 8月 16 23:05 docker-registry.md -rw-rw-r-- 1 xuyundong xuyundong 1990 8月 11 22:01 stty.md xuyundong@Macmini:~/Github/blog$ ls -lrt content/tips -rw-rw-r-- 1 xuyundong xuyundong 1990 8月 11 22:01 stty.md -rw-rw-r-- 1 xuyundong xuyundong 2644 8月 16 23:05 docker-registry.md -rw-rw-r-- 1 xuyundong xuyundong 897 8月 16 23:11 ls-tips.md.md </description>
    </item>
    
    <item>
      <title>查看信号的快捷键</title>
      <link>https://bwangel.me/docs/linux/stty/</link>
      <pubDate>Tue, 09 Aug 2022 21:43:40 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/stty/</guid>
      <description></description>
    </item>
    
    <item>
      <title>进程卡住如何 debug</title>
      <link>https://bwangel.me/docs/k8s/process-block/</link>
      <pubDate>Thu, 07 Jul 2022 19:56:13 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/k8s/process-block/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Ubuntu 初始化</title>
      <link>https://bwangel.me/docs/ubuntu/ubuntu-init/</link>
      <pubDate>Sun, 08 May 2022 10:42:22 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/ubuntu/ubuntu-init/</guid>
      <description>安装软件 sed -i &amp;#39;s/http:\/\/cn.archive.ubuntu.com/https:\/\/mirrors.ustc.edu.cn/g&amp;#39; /etc/apt/sources.list sudo apt update sudo apt install zsh git ripgrep vim curl build-essential fd-find autojump exa github cli vagrant google chrome chrome download alacritty gvm rustup nerdfont DejaVuSansMono font Ubuntu 将 capslock 映射成 esc sudo apt-get install dconf-cli # 使 caps 成为 esc 按键 dconf write /org/gnome/desktop/input-sources/xkb-options &amp;#34;[&amp;#39;caps:escape&amp;#39;]&amp;#34; # 交换 caps 和 esc 按键 dconf write &amp;#34;/org/gnome/desktop/input-sources/xkb-options&amp;#34; &amp;#34;[&amp;#39;caps:swapescape&amp;#39;]&amp;#34; caps 配置的说明 Caps Lock behavior ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐ │Option Description │ ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │caps:internal Caps Lock uses internal capitalization; Shift &amp;#34;pauses&amp;#34; Caps Lock │ │caps:internal_nocancel Caps Lock uses internal capitalization; Shift does not affect Caps Lock │ │caps:shift Caps Lock acts as Shift with locking; Shift &amp;#34;pauses&amp;#34; Caps Lock │ │caps:shift_nocancel Caps Lock acts as Shift with locking; Shift does not affect Caps Lock │ │caps:capslock Caps Lock toggles normal capitalization of alphabetic characters │ │caps:shiftlock Caps Lock toggles Shift Lock (affects all keys) │ │caps:swapescape Swap Esc and Caps Lock │ │caps:escape Make Caps Lock an additional Esc │ │caps:escape_shifted_capslock Make Caps Lock an additional Esc, but Shift + Caps Lock is the regular Caps Lock │ │caps:backspace Make Caps Lock an additional Backspace │ │caps:super Make Caps Lock an additional Super │ │caps:hyper Make Caps Lock an additional Hyper │ │caps:menu Make Caps Lock an additional Menu key │ │caps:numlock Make Caps Lock an additional Num Lock │ │caps:ctrl_modifier Make Caps Lock an additional Ctrl │ │caps:none Caps Lock is disabled │ │ │ └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘ 参考链接 How to permanently switch Caps Lock and Esc jammy 22.</description>
    </item>
    
    <item>
      <title>Review 《File Descriptor Transfer over Unix Domain Sockets》</title>
      <link>https://bwangel.me/docs/linux/file-descriptor-transfer-over-unix-domain-sockets/</link>
      <pubDate>Tue, 30 Nov 2021 11:58:56 +0800</pubDate>
      
      <guid>https://bwangel.me/docs/linux/file-descriptor-transfer-over-unix-domain-sockets/</guid>
      <description>&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用 Unix 域套接字传输文件描述符&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;原文地址: &lt;a href=&#34;https://copyconstruct.medium.com/file-descriptor-transfer-over-unix-domain-sockets-dcbbf5b3b6ec&#34;&gt;https://copyconstruct.medium.com/file-descriptor-transfer-over-unix-domain-sockets-dcbbf5b3b6ec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
  </channel>
</rss>
